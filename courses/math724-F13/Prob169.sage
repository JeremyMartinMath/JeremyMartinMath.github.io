def cw(lamb):
    result = [ lamb[0]-x for x in lamb if x<lamb[0] ]
    result.reverse()
    return result

def works(lamb):
    if len(lamb)==0:
        W = false
    elif lamb == [1]:
        W = true
    else:
        W = works(cw(lamb))
    return W

for n in range(15):
  for lamb in Partitions(n):
    if works(lamb):
      print(lamb)


[1]
[2, 1]
[3, 2]
[2, 2, 1]
[3, 2, 1]
[4, 3]
[4, 2, 1]
[3, 2, 1, 1]
[2, 2, 2, 1]
[5, 2, 1]
[4, 2, 1, 1]
[3, 3, 2]
[3, 2, 1, 1, 1]
[6, 2, 1]
[5, 4]
[5, 2, 1, 1]
[4, 3, 2]
[4, 2, 1, 1, 1]
[3, 3, 2, 1]
[3, 2, 1, 1, 1, 1]
[2, 2, 2, 2, 1]
[7, 2, 1]
[6, 2, 1, 1]
[5, 3, 2]
[5, 2, 1, 1, 1]
[4, 3, 2, 1]
[4, 2, 1, 1, 1, 1]
[3, 3, 2, 1, 1]
[3, 2, 1, 1, 1, 1, 1]
[8, 2, 1]
[7, 2, 1, 1]
[6, 5]
[6, 3, 2]
[6, 2, 1, 1, 1]
[5, 3, 2, 1]
[5, 2, 1, 1, 1, 1]
[4, 4, 3]
[4, 4, 2, 1]
[4, 3, 2, 2]
[4, 3, 2, 1, 1]
[4, 2, 1, 1, 1, 1, 1]
[3, 3, 3, 2]
[3, 3, 2, 1, 1, 1]
[3, 2, 1, 1, 1, 1, 1, 1]
[2, 2, 2, 2, 2, 1]
[9, 2, 1]
[8, 2, 1, 1]
[7, 3, 2]
[7, 2, 1, 1, 1]
[6, 3, 2, 1]
[6, 2, 1, 1, 1, 1]
[5, 4, 3]
[5, 3, 2, 2]
[5, 3, 2, 1, 1]
[5, 2, 1, 1, 1, 1, 1]
[4, 4, 2, 1, 1]
[4, 3, 2, 1, 1, 1]
[4, 2, 1, 1, 1, 1, 1, 1]
[3, 3, 3, 2, 1]
[3, 3, 2, 1, 1, 1, 1]
[3, 2, 1, 1, 1, 1, 1, 1, 1]
[10, 2, 1]
[9, 2, 1, 1]
[8, 3, 2]
[8, 2, 1, 1, 1]
[7, 6]
[7, 3, 2, 1]
[7, 2, 1, 1, 1, 1]
[6, 4, 3]
[6, 3, 2, 2]
[6, 3, 2, 1, 1]
[6, 2, 1, 1, 1, 1, 1]
[5, 5, 2, 1]
[5, 4, 3, 1]
[5, 3, 2, 1, 1, 1]
[5, 2, 1, 1, 1, 1, 1, 1]
[4, 4, 3, 2]
[4, 4, 2, 1, 1, 1]
[4, 3, 3, 2, 1]
[4, 3, 2, 2, 2]
[4, 3, 2, 1, 1, 1, 1]
[4, 2, 1, 1, 1, 1, 1, 1, 1]
[3, 3, 3, 2, 1, 1]
[3, 3, 2, 1, 1, 1, 1, 1]
[3, 2, 1, 1, 1, 1, 1, 1, 1, 1]
[2, 2, 2, 2, 2, 2, 1]
[11, 2, 1]
[10, 2, 1, 1]
[9, 3, 2]
[9, 2, 1, 1, 1]
[8, 3, 2, 1]
[8, 2, 1, 1, 1, 1]
[7, 4, 3]
[7, 3, 2, 2]
[7, 3, 2, 1, 1]
[7, 2, 1, 1, 1, 1, 1]
[6, 4, 3, 1]
[6, 3, 2, 1, 1, 1]
[6, 2, 1, 1, 1, 1, 1, 1]
[5, 5, 4]
[5, 5, 2, 1, 1]
[5, 4, 3, 2]
[5, 4, 3, 1, 1]
[5, 3, 3, 2, 1]
[5, 3, 2, 2, 2]
[5, 3, 2, 1, 1, 1, 1]
[5, 2, 1, 1, 1, 1, 1, 1, 1]
[4, 4, 3, 2, 1]
[4, 4, 2, 1, 1, 1, 1]
[4, 3, 3, 2, 1, 1]
[4, 3, 2, 1, 1, 1, 1, 1]
[4, 2, 1, 1, 1, 1, 1, 1, 1, 1]
[3, 3, 3, 3, 2]
[3, 3, 3, 2, 1, 1, 1]
[3, 3, 2, 1, 1, 1, 1, 1, 1]
[3, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1]

numWork = lambda n: len([lamb for lamb in Partitions(n) if works(lamb)])
[numWork(n) for n in range(1,15)]
[1, 0, 1, 0, 2, 1, 4, 4, 8, 8, 16, 16, 25, 30]
