%!PS-Adobe-2.0
%%Creator: dvips(k) 5.86 Copyright 1999 Radical Eye Software
%%Title: note_oct24.dvi
%%Pages: 4
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: XYDASH10 XYATIP10 XYBTIP10 Helvetica font Times-Roman
%%+ Symbol
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips note_oct24
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2002.10.30:1404
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: 8r.enc
% @@psencodingfile@{
%   author = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry",
%   version = "0.6",
%   date = "1 July 1998",
%   filename = "8r.enc",
%   email = "tex-fonts@@tug.org",
%   docstring = "Encoding for TrueType or Type 1 fonts
%                to be used with TeX."
% @}
% 
% Idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard Encoding + ISO Latin 1 + extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% 
% (4) Remaining positions left undefined are for use in (hopefully)
% upward-compatible revisions, if someday more characters are generally
% available.
% 
% (5) hyphen appears twice for compatibility with both 
% ASCII and Windows.
% 
/TeXBase1Encoding [
% 0x00 (encoded characters from Adobe Standard not in Windows 3.1)
  /.notdef /dotaccent /fi /fl
  /fraction /hungarumlaut /Lslash /lslash
  /ogonek /ring /.notdef
  /breve /minus /.notdef 
% These are the only two remaining unencoded characters, so may as
% well include them.
  /Zcaron /zcaron 
% 0x10
 /caron /dotlessi 
% (unusual TeX characters available in, e.g., Lucida Bright)
 /dotlessj /ff /ffi /ffl 
 /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef
 % very contentious; it's so painful not having quoteleft and quoteright
 % at 96 and 145 that we move the things normally found there to here.
 /grave /quotesingle 
% 0x20 (ASCII begins)
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three /four /five /six /seven
 /eight /nine /colon /semicolon /less /equal /greater /question
% 0x40
 /at /A /B /C /D /E /F /G /H /I /J /K /L /M /N /O
% 0x50
 /P /Q /R /S /T /U /V /W
 /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o
% 0x70
 /p /q /r /s /t /u /v /w
 /x /y /z /braceleft /bar /braceright /asciitilde
 /.notdef % rubout; ASCII ends
% 0x80
 /.notdef /.notdef /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /.notdef /.notdef /.notdef
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /.notdef /.notdef /Ydieresis
% 0xA0
 /.notdef % nobreakspace
 /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot
 /hyphen % Y&Y (also at 45); Windows' softhyphen
 /registered
 /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def

%%EndProcSet
%%BeginProcSet: texps.pro
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type/integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics/Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{
dup sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1
roll mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def
dup[exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}
if}forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}
def end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginFont: XYBTIP10
%!PS-AdobeFont-1.1: XYBTIP10 001.104
%%CreationDate: 1997 Jul 20 21:19:18
%%RevisionDate: 1997 Sep 14 19:58:47
%
% XYBTIP10: lower arrow tips for Xy-pic at 10 point "technical style".
%
% Original Metafont design  Copyright (C) 1991-1997 Kristoffer H. Rose.
% PostScript adaptation     Copyright (C) 1994-1997 Ross Moore.
% Hinting and ATM compatibility  Copyright (C) 1997 Y&Y, Inc.
%
% This file is part of the Xy-pic macro package.
% Xy-pic Copyright (c) 1991-1997  Kristoffer H. Rose  <krisrose@brics.dk>
%
% The Xy-pic macro package is free software; you can redistribute it 
% and/or modify it under the terms of the GNU General Public License 
% as published by the Free Software Foundation; either version 2  
% of the License, or (at your option) any later version.
%
% The Xy-pic macro package is distributed in the hope that it will 
% be useful, but WITHOUT ANY WARRANTY; without even the implied 
% warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  
% See the GNU General Public License for more details.
%
% You should have received a copy of the GNU General Public License 
% along with this macro package; if not, write to the 
% Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

11 dict begin
/FontInfo 9 dict dup begin
/version (001.104) readonly def
/Notice (Copyright (C) 1996, 1997 Ross Moore and Y&Y, Inc.) readonly def
/FullName (XYBTIP10) readonly def
/FamilyName (XYBTIP) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -276 def
/UnderlineThickness 138 def
end readonly def
/FontName /XYBTIP10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 14 /d14 put
dup 78 /d78 put
readonly def
/FontBBox{-542 -542 542 542}readonly def
/UniqueXX 5092839 def
currentdict end
currentfile eexec
80347982ab3942d930e069a70d0d48311d725e830d1c76fba12e12486e989c98
74c2b527f0925722787027f44470d484262c360cdfdddf3657533a57bb16f730
48bfbbfcb73a650484015441fdc837add94ac8fbd2022e3ec8f115d4b4bb7b7f
15388f22cc6198efe768bd9fceb3446ee4a8dc27d6cd152485384ef5f59381ff
da43f2d20c8fb08aa27ab2015b774db10dacfdcd33e60f178c461553146ab427
bdd7da12534ba078ad3d78041987a409a2d06b6b3057738213cee08cd789eeaa
097caceb2738a78b2f437638f0d63dd9e45ce613ae94486e726c4ed202501d61
51965c5c865a24933f21e0b1c67ff0d74bea0b8003496a2b1c9e3cde218dfa02
7343f1561243c5419412a440b6d4682c4dd92bf310718d73d28f47559a653346
c8fa6a8e3ec0a68d6661b293a71328a0bd0521249f1263070e67d0c20ca4a48d
221bcd864852e33289496155416b7cc05e73dd2b7f9ba0977ab328be862ac7e0
139c8eef1237e57525cbc853d7cbe3c9a8b54c378e8af02257a8daa736c3d9ae
fb18fd198a33681c334984d81e2d783d32adf54549f5bea0bf351b1016032908
81685bde8d44703654d97063c8ebfb896e029b2383f5754d467163ec07f3398a
d88196c720fd98b9a2260de8d7d3aa6453f831ce18233cfbf6cb098bc3ca2cd1
495386a279ced386537228ec08f3b3e400cc040ab2e763b0cd93c9a2c5ee0436
f0a2f033ba5d3e4231aacc9b0aa820f7ad72a3cec593a1153ee5527693ad3bc8
eaef55ac2f52fdf27146c04dcc825181a275e632e75a94cb9b3d3f7d17c1c08b
83bbf5c681f864e234d10b0f7c64839aa1671931f39a001e4134030b91d9a473
6c7d5e101e04feb20a04907ab46ab24902c1844b018beefd9014c8b629674e57
f1f0d63ad79dfa8ce4d1fffabeb4315386d494a3ab66cc9f291a714ef0ee4f9f
1687f0ecbcd2acea0e98dd5f94dfd700e546599e58d1f25bc54ef6ec0f12b91e
6690287b7c527a51724cea71da655f2b2974633ba5484cc6c2300ba28dff89e2
0c37542986ec1e4613cc8a16521e5c2720d88fa18111a1083dcee82a4b65f66f
22aaea93d794cdef4a30d0256760a4841409a75e4eedd7f3b61725acbf421fdb
4c330776ae0b6c1608ebf9e0f896c08b5b96d827dc767346c1ff8507a6211924
780f9e6cfa9b5de41869f8af28897d2181ccace0adcce07bdf7611618d485b44
43b8713dc4eb39ec188a708565b8d22adff7e407cbb0af01453c1f12ddaa71ca
aa052872eb4eb5b3d52e4f5e2b4cbdbcec7696f4fc958873a817f87f9f6ac97f
e853e60e4f29e2c041302d566e77294e27697d64f991ddb1f9a5b485e67d878b
0674c4fdad35ca076f6f1c8c2231754e03521153b77aaf8b8be266946a32f396
964f3a1f4a83aa39d1dc909bb0fa4c0dac4f33ef10d91d903927c25651fd1400
f53299eb53eecabaff8e64e36f94ee4295c99cb3382b8d23199a7dd07f6bf23e
2ad8b6ef14b08b60aeb82f177955cea1148bfeef0ca7
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: XYATIP10
%!PS-AdobeFont-1.1: XYATIP10 001.104
%%CreationDate: 1997 Jul 20 21:19:17
%%RevisionDate: 1997 Sep 14 19:58:47
%
% XYATIP10: upper arrow tips for Xy-pic at 10 point "technical style".
%
% Original Metafont design  Copyright (C) 1991-1997 Kristoffer H. Rose.
% PostScript adaptation     Copyright (C) 1994-1997 Ross Moore.
% Hinting and ATM compatibility  Copyright (C) 1997 Y&Y, Inc.
%
% This file is part of the Xy-pic macro package.
% Xy-pic Copyright (c) 1991-1997  Kristoffer H. Rose  <krisrose@brics.dk>
%
% The Xy-pic macro package is free software; you can redistribute it 
% and/or modify it under the terms of the GNU General Public License 
% as published by the Free Software Foundation; either version 2  
% of the License, or (at your option) any later version.
%
% The Xy-pic macro package is distributed in the hope that it will 
% be useful, but WITHOUT ANY WARRANTY; without even the implied 
% warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  
% See the GNU General Public License for more details.
%
% You should have received a copy of the GNU General Public License 
% along with this macro package; if not, write to the 
% Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

11 dict begin
/FontInfo 9 dict dup begin
/version (001.104) readonly def
/Notice (Copyright (C) 1996, 1997 Ross Moore and Y&Y, Inc.) readonly def
/FullName (XYATIP10) readonly def
/FamilyName (XYATIP) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -276 def
/UnderlineThickness 138 def
end readonly def
/FontName /XYATIP10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 14 /d14 put
dup 78 /d78 put
readonly def
/FontBBox{-542 -542 542 542}readonly def
/UniqueXX 5092838 def
currentdict end
currentfile eexec
80347982ab3942d930e069a70d0d48311d725e830d1c76fba12e12486e989c98
74c2b527f0925722787027f44470d484262c360cdfdddf3657533a57bb16f730
48bfbbfcb73a650484015441fdc837add94ac8fbd2022e3ec8f115d4b4bb7b7f
15388f22cc6198efe768bd9fceb3446ee4a8dc27d6cd152485384ef5f59381ff
da43f2d20c8fb08aa27ab2015b774db10dacfdcd33e60f178c461553146ab427
bdd7da12534ba078ad3d78041987a409a2d06b6b3057738213cee08cd789eeaa
097caceb2738a78b2f437638f0d63dd9e45ce613ae94486e726c4ed202501d61
51965c5c865a24933f21e0b1c67ff0d74bea0b8003496a2b1c9e3cde218dfa02
7343f1561243c5419412a440b6d4682c4dd92bf310718d73d28f47559a653346
c8fa6a8e3ec0a68d6661b293a71328a0bd0521249f1263070e67d0c20ca4a48d
221bcd864852e33289496155416b7cc05e73dd2b7f9ba0977ab328be862ac7e0
139d5cb0db6f50b26bd8ab173859c9c94db82970311d7eb0a02bee1be5f0d126
f9079e67107eda14b460e46b03b0422eb45a4f4afa382841c35b0bc0c8639b73
43c819afc69838ce781c2de7d22bf503ef6eec27c83cfd52a77bbc754b4f2050
55341700991f3ef4b5b5a54c21283034b38c8b6a6e65abccc94c0c26836806ec
4df8d8c64f595841395072f8a2d289b7fe5497bc0e061810b16a1e48653bb092
42ffa3ef0bba4e37a5aa4ddc31f3138aaf10998fd66f3817b77012eac677ed2d
7447908c771fbaba4dfcfeca5374a6b87e5657809a82f0ae068c5384c12f4653
2a82645a512212140d815e80ec76b3370c382e9f6d29ec6afc178a622249fda7
775d4f6a554f04748ed4210257fa6e376188a175db3c00f88421820b063a985c
07ad665eff7e2d32a27015c528227c2805aa8df134f4abad9958b841aa4263ec
9ec6d907308b0a5a51049de002cfe60ef35bf33fc863ba14ff361749554abd65
47426fbf3958ddb506ea3e303c932edec2896d3017a57913cde60cbdafeddbd3
cd5ef6dd49299783a92fe9deafb24e7f74a6ca6c0198b2fcda46b51560c2d3e8
e1f36eee1bc1dff1605718036728a32187f38f9086461e0b590119695a0a724c
20094d3f5ad4276d7e295c04cf660655fe7cf4d9fe5aa7489544316aacb779a7
4ede34f181801f0271dae427c17603efed880e122b97227611b8371472fcb09f
68406f016fde61c0f8d405aa3e7f6e25946d304de058789bd488c2ea96a5abbc
28eec1e2748895cac6abfa98aa9349e82052fca0aad105e663074c8694f701da
4f8d378d5976bb1bd89da88a1008a82eabe48940e2501d4bf17f1575c33300ba
0bcc35cfec4501145e7e8f7ca0ee2943c3239a2a62e303808315276398704213
ad20df0e7ba40e83c37c49fda88789242e2e3dcc777e393faff3edefb5a43094
5977d5d293ce240895f4b146561534bd3cc4f6462f4bd076204aecc4fc409c0f
d017e13467d766b62f816aef3af28c2d8a83b31364ee7d95989a7b0f5525c99a
ea6c10312756f2ac2e4b1331a4
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: XYDASH10
%!PS-AdobeFont-1.1: XYDASH10 001.104
%%CreationDate: 1997 Jul 20 21:19:18
%%RevisionDate: 1997 Aug 28 05:34:12
%%RevisionDate: 1997 Sep 18 10:23:31
%
% XYDASH10: line segments for Xy-pic at 10 point
%
% Original Metafont design  Copyright (C) 1991-1997 Kristoffer H. Rose.
% PostScript adaptation     Copyright (C) 1994-1997 Ross Moore.
% Hinting and ATM compatibility  Copyright (C) 1997 Y&Y, Inc.
%
% This file is part of the Xy-pic macro package.
% Xy-pic Copyright (c) 1991-1997  Kristoffer H. Rose  <krisrose@brics.dk>
%
% The Xy-pic macro package is free software; you can redistribute it 
% and/or modify it under the terms of the GNU General Public License 
% as published by the Free Software Foundation; either version 2  
% of the License, or (at your option) any later version.
%
% The Xy-pic macro package is distributed in the hope that it will 
% be useful, but WITHOUT ANY WARRANTY; without even the implied 
% warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  
% See the GNU General Public License for more details.
%
% You should have received a copy of the GNU General Public License 
% along with this macro package; if not, write to the 
% Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

11 dict begin
/FontInfo 9 dict dup begin
/version (001.104) readonly def
/Notice (Copyright (C) 1996, 1997 Ross Moore and Y&Y, Inc.) readonly def
/FullName (XYDASH10) readonly def
/FamilyName (XYDASH) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -300 def
/UnderlineThickness 150 def
end readonly def
/FontName /XYDASH10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 13 /d13 put
dup 49 /d49 put
dup 77 /d77 put
dup 113 /d113 put
readonly def
/FontBBox{-40 -520 503 520}readonly def
/UniqueXX 5092844 def
currentdict end
currentfile eexec
80347982ab3942d930e069a70d0d48311d743b8793c40476b99911a1be6c93ca
a7ffc9533764a6a2a3ebcf0bebc6668e399d80ad8b0e5e21d556d8fa71b95a1e
01e6689c74f977a4bbec6795aec114d8507f237839f414ee4fbf8162c865260f
923a63721852c7bff69703f7e0ab99c3b85e83c62c13ea99442890e370376cce
7133ce8f3de2f4c1dc78fb55dff4eb737c195d266281adef5d56fbbc3b785b1b
59d6efeab3b93e713f4b9105cf1594c83472177c0f2b04c840760c92c094a0b9
2a720e4c7b03708d225531ac69324547d65009965f1c52d2be3112c67b6002b1
3d5f2c82505b7f0136cc926ff2bda0b53691b13e816817e913048ad033e0ff31
9d18776c4be80936c7449f316ff7f9026e5eeb9984867fc558bb18773e9a5390
d4490fb8e63a0ce175f52732043cba9d379d01ef25fc4be056d3206186b53195
63ee3d03fa580efa0ad7d3162f77878d348a841432fabedfebc8559530f6cbc1
59df0a77aacfa9f0974542a736680e064ac101c646442b0ca133c4701c206de9
6b70d341f9558a800520c2d32be3628b6df05a19538ec2596d2334f05d54e742
a1a18ebbc12f04c45b899f667d9e6f3a4eaa1854562506d0da4057c4bbfbbacc
c1c208cc47b76226ef6d4d3da7d976b7a21a2cc7aa7cf0602fbd2a46022f7894
c0667e19a31cc10ca33811f882ca5cc140bd49eb62545ffe3f418e8cb9b223e3
b2630b486a3b948c74751c414e84334424a1eee8f20b1bd4eab9a0e0545c9bf2
f8cda548feb88b89e369f29f5318ee43b25672b275b05016b635dc656bca5b14
a28e91c516e3f5e99609f5a37a696fbb39379b8374a044e2fe6d4a193d5360d4
31229d74455ff8645ba7462da11460be68629c6a2b1b4b4f409c806cdaec4d3f
941ec5e5a1a6aaaf2c72de027d73b6d446b29f4a0504dfa9e100f273e0b8f54f
707a5a7e1e5f5f3734783960d641ff957f220cdff18bb2d536a406abc54e557f
a1e9728df44ca1a17c233e052e050fcd4d771fc5fa346a7324c5f767ba6adfe7
33ef1f05382c604434b60e544f4466a560378685b819104f301de8ee80ffb12e
f7d7e8bfc45c2161845c5224229f415e183feae4726f4305002889acb235e6f4
bf0ab44bc6dacc704a54c1e2f7c8ff2bb629140905d39a8c3423ce87a922dc61
ba0e3ba1e129ce82d23dc3d03e52cb523c1cee3eeaf1fecacb49436c52d2e0bc
26c01d5043abf6f655f67850e60de2b80b73c3f71b43b6ff31ca682b5a2c16d6
e606d7315861f7163249701086de356cc1e89b0086be1b753b9f3bbdf775b586
0d04db9c3362a343bae5fcd7d64cbf12a6038523d77a22a3bfe6f1ccdf2fbd80
f83434e174784d44ec0f2e8853f3fe73188b3618f099bb23a0003caa213ea39a
115b12ae69a0883a685d2ed33be5aa3cffb595b622c08ec48ae9907718c85e20
681bbecb4add7acb74ef425d64502fac53608cdac1d23857f7f055e67750fe63
b2fa0c593a51b53a0cc2a6b7211bed0c7d16179b1727959558e8c473c2480d08
f14977e9c712272a2d983fa0dce7af4122e818e17039b774d682fcc0ea760003
a255e006da7f1104716d47669bb8506aeefa8ff2cdbdaaef2d352f34adaa4f91
5f47e2d0685e2413a2576658578334757d7bc9526f993615ee5e1042193d5745
8c73cc86d19dc52df6256c2c3b748da79d93865224afc5fd2f515f758400d235
f58ea373c3021e29ff361c6628a5a5776f037dea27230a131b9cfaf4f9b9dcdc
11f9add7d6aa628f0f80981fcddc758d84e4b25b995a57472f13de5ba1688b0b
0ae7916d12c6
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
TeXDict begin 40258431 52099146 1000 600 600 (note_oct24.dvi)
@start
%DVIPSBitmapFont: Fa cmti10 10 9
/Fa 9 117 df<14F8EB07FE90381F871C90383E03FE137CEBF801120148486C5A485A12
0FEBC001001F5CA2EA3F801403007F5C1300A21407485C5AA2140F5D48ECC1C0A2141F15
831680143F1587007C017F1300ECFF076C485B9038038F8E391F0F079E3907FE03FC3901
F000F0222677A42A>97 D<133FEA1FFFA3C67E137EA313FE5BA312015BA312035BA31207
EBE0F8EBE7FE9038EF0F80390FFC07C013F89038F003E013E0D81FC013F0A21380A2123F
1300A214075A127EA2140F12FE4814E0A2141F15C05AEC3F80A215005C147E5C387801F8
007C5B383C03E0383E07C0381E1F80D80FFEC7FCEA01F01C3B77B926>I<147F903803FF
C090380FC1E090381F0070017E13784913383901F801F83803F003120713E0120FD81FC0
13F091C7FC485AA2127F90C8FCA35A5AA45AA3153015381578007C14F0007EEB01E0003E
EB03C0EC0F806CEB3E00380F81F83803FFE0C690C7FC1D2677A426>I<147F903803FFC0
90380FC1E090383F00F0017E13785B485A485A485A120F4913F8001F14F0383F8001EC07
E0EC1F80397F81FF00EBFFF891C7FC90C8FC5A5AA55AA21530007C14381578007E14F000
3EEB01E0EC03C06CEB0F806CEB3E00380781F83803FFE0C690C7FC1D2677A426>101
D<ED07C0ED1FF0ED3E38ED7C3CEDF8FC15F9140115F1020313F8EDF0F0160014075DA414
0F5DA4141F5D010FB512C05B16809039003F800092C7FCA45C147EA414FE5CA413015CA4
13035CA413075CA4130F5CA3131F5CA391C8FC5B121CEA7E3EA2EAFE3C137C1378EAF8F0
1278EA3FC0EA0F80264C82BA19>I<EB03F0EA01FFA3EA00075CA3130F5CA3131F5CA313
3F91C8FCA35B90387E07F0EC1FFCEC783E9038FFE01F02C01380EC800F1400485A16C05B
49EB1F8012035BA2153F000715005BA25D000F147E5B15FE5D121FD98001131C15F8163C
003F01031338010013F0A216704814E0007E15F016E0EDE1C000FE903801E38048903800
FF000038143C263B7BB92A>104 D<EB0FC0EA07FFA3EA001F1480A2133FA21400A25BA2
137EA213FEA25BA21201A25BA21203A25BA21207A25BA2120FA25BA2121FA25BA2123FA2
90C7FCA25AA2EA7E0EA212FE131EEAFC1CA2133C133812F81378EA7870EA7CE0121FEA0F
80123B79B915>108 D<14FE903807FF8090380F83C090383E00E04913F00178137001F8
13F00001130313F0A215E00003EB01C06DC7FC7FEBFFC06C13F814FE6C7F6D13807F010F
13C01300143F141F140F123E127E00FE1480A348EB1F0012E06C133E00705B6C5B381E03
E06CB45AD801FEC7FC1C267AA422>115 D<EB0380EB07C0130FA4131F1480A3133F1400
A35B137E007FB5FCA2B6FC3800FC00A312015BA312035BA312075BA3120F5BA3121FEB80
1CA2143C003F1338EB0078147014F014E0EB01C0EA3E03381F0780380F0F00EA07FCEA01
F0183579B31C>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmex10 10 13
/Fb 13 126 df<1430147014E0EB01C01303EB0780EB0F00A2131E5BA25B13F85B12015B
1203A2485AA3485AA3121F90C7FCA25AA3123EA2127EA6127C12FCB3A2127C127EA6123E
A2123FA37EA27F120FA36C7EA36C7EA212017F12007F13787FA27F7FA2EB0780EB03C013
01EB00E0147014301462738226>0 D<12C07E12707E123C7E7EA26C7E6C7EA26C7E7F12
007F1378137CA27FA37FA31480130FA214C0A31307A214E0A6130314F0B3A214E01307A6
14C0A2130FA31480A2131F1400A3133EA35BA2137813F85B12015B485AA2485A48C7FCA2
121E5A12385A5A5A14627C8226>I<12E012FCEA3F80EA07E0EA03F8C67E137E7F6D7EA2
80130FB3AB6D7EA26D7E80EB00FC147EEC1F80EC07E0EC01F8A2EC07E0EC1F80EC7E005C
EB03F85C495AA2495AB3AB131F5CA249C7FC137E5BEA03F8EA07E0EA3F8000FCC8FC12E0
1D62778230>9 D<160F161F163E167C16F8ED01F0ED03E0ED07C0150FED1F801600153E
157E5D4A5A5D14034A5A5D140F4A5AA24AC7FC143E147E5CA2495AA2495AA2495AA2130F
5CA2495AA2133F91C8FCA25B137E13FEA25B1201A25B1203A35B1207A35B120FA35BA212
1FA45B123FA690C9FC5AAA12FEB3AC127FAA7E7FA6121F7FA4120FA27FA312077FA31203
7FA312017FA212007FA2137E137F7FA280131FA26D7EA2801307A26D7EA26D7EA26D7EA2
147E143E143F6E7EA26E7E1407816E7E1401816E7E157E153E811680ED0FC01507ED03E0
ED01F0ED00F8167C163E161F160F28C66E823D>18 D<12F07E127C7E7E6C7E6C7E6C7E7F
6C7E1200137C137E7F6D7E130F806D7E1303806D7EA26D7E147C147E80A26E7EA26E7EA2
6E7EA2811403A26E7EA2811400A281157E157FA2811680A2151F16C0A3150F16E0A31507
16F0A31503A216F8A4150116FCA6150016FEAA167FB3AC16FEAA16FC1501A616F81503A4
16F0A21507A316E0150FA316C0151FA31680153FA216005DA2157E15FE5DA214015DA24A
5AA214075DA24A5AA24A5AA24AC7FCA2147E147C14FC495AA2495A5C1307495A5C131F49
C8FC137E137C5B1201485A5B485A485A48C9FC123E5A5A5A28C67E823D>I<EC01F01407
140F143F147F903801FFC0491380491300495A495A495A495A5C495A485B5A91C7FC485A
A2485AA2485AA2123F5BA2127F5BA412FF5BB3B3A71C4B607E4A>56
D<EAFFC0B3B3A77F127FA47F123FA27F121FA26C7EA26C7EA26C7E807E6C7F6D7E806D7E
6D7E6D7E6D7E6D13806D13C09038007FF0143F140F140714011C4B60804A>58
D<EC1FF8B3B3A7143F15F0A4EC7FE0A315C014FFA2491380A215005B5C1307495A5C131F
495A5C495A495A4890C7FC485A485A485A485AEA7FE0EAFF8090C8FC12FCB4FC7FEA7FE0
EA1FF06C7E6C7E6C7E6C7E6C7F6D7E6D7E806D7E130F806D7E1303807F1580A26D13C0A2
147F15E0A3EC3FF0A415F8141FB3B3A71D9773804A>60 D<EAFFC0B3A90A1B60804A>62
D<EE7F80ED0FFF157F4AB5FC140F143F5C49B6FC13075B4991C7FC4913E090B5C8FC4813
F84813E014804848C9FC485AEA1FF0485A5B485A48CAFCA25A5A5A291B838925>122
D<B4FC13F813FF14C014F814FE8015C015F081C66C7F01037F9039007FFF80020F7F0203
7F1400ED3FF06F7EED07FC6F7E15016F7EEE7F80A2163F161F160F291B818925>I<12F8
7E7E7EA26C7E6C7E7F6C7EEA0FFC6C7E6C6C7E14E06C13F86C13FF013F13E06D13FF6DEC
FF807F13016D7E80140F14016E7E150FED007F291B839A25>I<EE0F80161F163F167FA2
EEFF004B5A15034B5AED1FF84B5AEDFFE01403020F5B027F5B902603FFFEC7FC017F5BB6
5A5D15C092C8FC5C14F814C091C9FC13F890CAFC291B819A25>I
E
%EndDVIPSBitmapFont
/Fc 177[0 63[0 14[{}2 83.022 /XYBTIP10 rf /Fd 177[0 63[0
14[{}2 83.022 /XYATIP10 rf /Fe 142[42 35[42 27[23 35[23
13[{}4 83.022 /XYDASH10 rf
%DVIPSBitmapFont: Ff cmsy7 7 2
/Ff 2 16 df<B712FEA327037A8F34>0 D<137F3801FFC0000713F0487F487F487FA248
7FA2B61280A76C1400A26C5BA26C5B6C5B6C5B000113C06C6CC7FC19197C9A22>15
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fg cmbx12 12 20
/Fg 20 119 df<EA07C0EA1FF0487E487E487E7FA31480A37E7EEA1FF7EA07C7EA000713
0FA21400A25B131E133EA25B13FC5B485A485A1207485A485A90C7FC120C112278C41F>
39 D<EC01E01403EC0FC0EC1F80EC3F00147E5C1301495A495A5C130F495A133F5C137F
49C7FCA2485AA2485AA212075BA2120F5BA2121FA25B123FA4485AA612FFA25BAE7FA212
7FA66C7EA4121F7FA2120FA27F1207A27F1203A26C7EA26C7EA26D7E133F80131F6D7E13
07806D7E6D7E1300147E80EC1F80EC0FC0EC03E014011B6476CA2C>I<12F07E127E7E6C
7E6C7E6C7E7F6C7E6C7E12007F137F80133F806D7EA26D7EA26D7EA2801303A2801301A2
80A27F1580A4EC7FC0A615E0A2143FAE147FA215C0A6ECFF80A415005BA25CA213035CA2
13075CA2495AA2495AA2495A5C137F91C7FC13FE5B1201485A485A5B485A485A48C8FC12
7E12F85A1B647ACA2C>I<EC03C01407141F147FEB03FF133FB6FCA413C3EA0003B3B3AD
B712FCA5264177C038>49 D<ECFFE0010F13FE013F6D7E90B612E0000315F82607FC0313
FE3A0FE0007FFFD81F806D138048C7000F13C0488001C015E001F07F00FF6E13F07F17F8
81A46C5A6C5A6C5AC9FC17F05DA217E05D17C04B13804B1300A2ED1FFC4B5A5E4B5A4B5A
4A90C7FC4A5A4A5AEC0FF04A5AEC3F804AC7127814FE495A494814F8D907E014F0495A49
5A49C8FC017C140149140348B7FC4816E05A5A5A5A5AB8FC17C0A42D417BC038>I<ECFF
F0010713FF011F14C0017F14F049C66C7ED803F8EB3FFED807E06D7E81D80FF86D138013
FE001F16C07FA66C5A6C4815806C485BC814005D5E4B5A4B5A4B5A4A5B020F1380902607
FFFEC7FC15F815FF16C090C713F0ED3FFCED0FFEEEFF80816F13C017E0A26F13F0A217F8
A3EA0FC0EA3FF0487EA2487EA217F0A25D17E06C5A494913C05BD83F80491380D81FF049
1300D80FFEEBFFFE6CB612F800015D6C6C14C0011F49C7FC010113E02D427BC038>I<B5
00FE067FB512806E95B6FCA26F5EA2D8003F50C7FC013D6DEE03DFA2013C6DEE079FA26E
6CEE0F1FA26E6C161EA26E6C163CA36E6C1678A26E6C16F0A26E6DEC01E0A26E6DEC03C0
A36E6DEC0780A26F6CEC0F00A26F6C141EA26F6C5CA36F6C5CA26F6C5CA26F6D485AA26F
6D485AA26F6D485AA3706C48C7FCA293383FF81EA2706C5AA2706C5AA3706C5AA2705BA2
705BA2705BA2B6057FB6128071C7FCA2173E171C61447CC36A>77
D<903801FFE0011F13FE017F6D7E48B612E03A03FE007FF84848EB1FFC6D6D7E486C6D7E
A26F7FA36F7F6C5A6C5AEA00F090C7FCA40203B5FC91B6FC1307013F13F19038FFFC0100
0313E0000F1380381FFE00485A5B127F5B12FF5BA35DA26D5B6C6C5B4B13F0D83FFE013E
EBFFC03A1FFF80FC7F0007EBFFF86CECE01FC66CEB8007D90FFCC9FC322F7DAD36>97
D<EB7FC0B5FCA512037EB1ED0FF892B57E02C314E002CF14F89139DFC03FFC9139FF000F
FE02FCEB03FF4A6D13804A15C04A6D13E05CEF7FF0A218F8173FA318FCAC18F8A2177F18
F0A3EFFFE06E15C06E5B6E491380027C491300496C495A903AFC1FC07FFC496CB512F0D9
F00314C049C691C7FCC8EA1FF036467DC43E>I<EC3FFC49B512C0010F14F0013F14FC90
397FF003FE9039FFC001FF0003495A48494813805B120F485AA2485A6F1300007F6E5AED
00784991C7FCA212FFAC6C7EA3123F6DEC03C0A26C6C1407000F16806D140F6C6DEB1F00
6C6D133E6C01F05B3A007FFC03F86DB55A010F14C0010391C7FC9038003FF82A2F7CAD32
>I<EC3FF80103B57E010F14E0013F8090397FF83FF89039FFC007FC48496C7E48496C7E
48486D1380485A001FED7FC05B003FED3FE0A2127F5B17F0161F12FFA290B7FCA401F0C9
FCA5127FA27FA2123F17F06C7E16016C6C15E06C6C14036C6DEB07C06C6DEB0F806C01F0
EB3F0090397FFE01FE011FB55A010714F0010114C09026001FFEC7FC2C2F7DAD33>101
D<137C48B4FC4813804813C0A24813E0A56C13C0A26C13806C1300EA007C90C7FCAAEB7F
C0EA7FFFA512037EB3AFB6FCA518467CC520>105 D<EB7FC0B5FCA512037EB3B3B3A3B6
1280A519457CC420>108 D<90397F8007FEB590383FFF8092B512E0028114F8913987F0
3FFC91388F801F000390399F000FFE6C139E14BC02F86D7E5CA25CA35CB3A7B60083B512
FEA5372D7CAC3E>110 D<EC1FFC49B512C0010714F0011F14FC90397FF80FFF9026FFC0
017F48496C7F4848C7EA3FE000078248486E7E49140F001F82A2003F82491407007F82A4
00FF1780AA007F1700A46C6C4A5AA2001F5E6D141F000F5E6C6C4A5AA26C6C6CEBFFE06C
6D485B27007FF80F90C7FC6DB55A010F14F8010114C09026001FFCC8FC312F7DAD38>I<
90387F807FB53881FFE0028313F0028F13F8ED8FFC91389F1FFE000313BE6C13BC14F8A2
14F0ED0FFC9138E007F8ED01E092C7FCA35CB3A5B612E0A5272D7DAC2E>114
D<90391FFC038090B51287000314FF120F381FF003383FC00049133F48C7121F127E00FE
140FA215077EA27F01E090C7FC13FE387FFFF014FF6C14C015F06C14FC6C800003806C15
806C7E010F14C0EB003F020313E0140000F0143FA26C141F150FA27EA26C15C06C141FA2
6DEB3F8001E0EB7F009038F803FE90B55A00FC5CD8F03F13E026E007FEC7FC232F7CAD2C
>I<EB01E0A51303A41307A2130FA2131FA2133F137F13FF1203000F90B51280B7FCA4C6
01E0C7FCB3A3ED01E0A9150302F013C0137F150790393FF80F8090391FFC1F006DB5FC6D
13FC01015B9038003FE023407EBE2C>I<D97FC049B4FCB50103B5FCA50003EC000F6C81
B3A85EA25EA25E7E6E491380017FD901F713FE9138F807E76DB512C7010F1407010313FE
9026007FF0EBFC00372E7CAC3E>I<B6903803FFFCA5000101E09038003E006C163C8001
7F5D8017F8013F5D6E1301011F5D6E1303010F5D6E13076D5DED800F6D92C7FC15C05E6D
EBE01E163E6D143CEDF07C027F1378EDF8F8023F5B15FD021F5B15FF6E5BA36E5BA26E90
C8FCA26E5AA26E5AA21578362C7EAB3B>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fh cmmi5 5 1
/Fh 1 115 df<380F07E0383F8FF83833D81CEA63F038C3E03CEBC07C12031438380780
00A448C7FCA4121E120C16127D911C>114 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fi cmr5 5 1
/Fi 1 50 df<1360EA01E0120F12FF12F11201B3A3387FFF80A2111C7B9B1C>49
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fj cmr7 7 12
/Fj 12 58 df<EC0380A24A7E4A7EA24A7EA2EC3BF81433EC61FCA2ECC0FE157E903801
807F81D903007F496D7E1306010E6D7E130C011C6D7E1318496D7E150149801500498000
01157F5B0003ED3F8090C8FC48ED1FC01206000EED0FE0120C48ED07F01603003FB712F8
A24816FCB812FEA22F2A7DA937>1 D<1306130C13181330136013E0EA01C0EA0380A2EA
07005A120E121EA2121C123CA35AA512F85AAB7E1278A57EA3121C121EA2120E120F7EEA
0380A2EA01C0EA00E0136013301318130C13060F3B7AAB1A>40 D<12C012607E7E7E120E
7EEA0380A2EA01C013E0120013F0A213701378A3133CA5133E131EAB133E133CA51378A3
137013F0A213E0120113C0EA0380A2EA0700120E120C5A5A5A5A0F3B7DAB1A>I<EB3F80
3801FFF03803E0F83807803C48487E001E7F003E1480A2003C1307007C14C0A400FC14E0
AE007C14C0A36CEB0F80A36CEB1F006C131E6C6C5A3803E0F86CB45A38003F801B277EA5
21>48 D<13381378EA01F8121F12FE12E01200B3AB487EB512F8A215267BA521>I<13FF
000313E0380E03F0381800F848137C48137E00787F12FC6CEB1F80A4127CC7FC15005C14
3E147E147C5C495A495A5C495A010EC7FC5B5B903870018013E0EA018039030003001206
5A001FB5FC5A485BB5FCA219267DA521>I<13FF000313E0380F01F8381C007C0030137E
003C133E007E133FA4123CC7123E147E147C5C495AEB07E03801FF8091C7FC380001E06D
7E147C80143F801580A21238127C12FEA21500485B0078133E00705B6C5B381F01F03807
FFC0C690C7FC19277DA521>I<1438A2147814F81301A2130313071306130C131C131813
301370136013C012011380EA03005A120E120C121C5A12305A12E0B612E0A2C7EAF800A7
497E90383FFFE0A21B277EA621>I<0018130C001F137CEBFFF85C5C1480D819FCC7FC00
18C8FCA7137F3819FFE0381F81F0381E0078001C7F0018133EC7FC80A21580A21230127C
12FCA3150012F00060133E127000305B001C5B380F03E03803FFC0C648C7FC19277DA521
>I<EB0FE0EB3FF8EBF81C3801E0063803C01F48485AEA0F005A121E003E131E91C7FC5A
A21304EB3FC038FCFFF038FDC078EB003CB4133E48131E141FA2481480A4127CA4003C14
00123E001E131E143E6C133C6C6C5A3803C1F03801FFC06C6CC7FC19277DA521>I<1230
123C003FB512E0A215C0481480A239700007000060130E140C48131C5C5CC75A5C130149
5AA249C7FC5B130E131EA3133E133CA2137CA413FCA813781B287DA621>I<137F3801FF
C03807C1E0380F0070001E1378003E7F003C133E007C131EA200FC131FA41580A4007C13
3FA2123C003E137F001E135F380F01DF3807FF9F3801FE1FD8001013001300A2143E123C
007E133CA25C5C007C5B383003C0381C0780D80FFFC7FCEA03F819277DA521>57
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fk cmsy10 10 14
/Fk 14 104 df<007FB81280B912C0A26C17803204799641>0 D<EF0180EF07C0171FEF
7F80933801FF00EE07FCEE1FF0EE7FC04B48C7FCED07FCED1FF0ED7FC04A48C8FCEC07FC
EC1FF0EC7FC04948C9FCEB07FCEB1FF0EB7FC04848CAFCEA07FCEA3FF0EA7FC048CBFC5A
EA7F80EA3FE0EA0FF8EA03FEC66C7EEB3FE0EB0FF8EB03FE903800FF80EC3FE0EC0FF8EC
03FE913800FF80ED3FE0ED0FF8ED03FE923800FF80EE3FE0EE0FF8EE03FE933800FF80EF
3FC0170FEF038094C7FCAE007FB81280B912C0A26C1780324479B441>20
D<126012F812FEEA7F80EA3FE0EA0FF8EA03FEC66C7EEB3FE0EB0FF8EB03FE903800FF80
EC3FE0EC0FF8EC03FE913800FF80ED3FE0ED0FF8ED03FE923800FF80EE3FE0EE0FF8EE03
FE933800FF80EF3FC0171FEF7F80933801FF00EE07FCEE1FF0EE7FC04B48C7FCED07FCED
1FF0ED7FC04A48C8FCEC07FCEC1FF0EC7FC04948C9FCEB07FCEB1FF0EB7FC04848CAFCEA
07FCEA1FF0EA7FC048CBFC12FC1270CCFCAE007FB81280B912C0A26C1780324479B441>
I<020FB6128091B712C01303010F1680D91FF8C9FCEB7F8001FECAFCEA01F8485A485A48
5A5B48CBFCA2123EA25AA2127812F8A25AA87EA21278127CA27EA27EA26C7E7F6C7E6C7E
6C7EEA00FEEB7F80EB1FF86DB71280010316C01300020F1580323279AD41>26
D<0278151EA402F8151F4A81A20101834A150701038349486F7EA249486F7E49CA7E4983
017E177E49834848EF1F804848EF0FC0D80FE0EF07F0003FBA12FCBCFCA2003F19FCD80F
E0CAEA07F0D803F0EF0FC06C6CEF1F806C6CEF3F00017E177E6D5F6D5F6D6C4B5A6D6C4B
5AA26D6C4B5A01015F6E150F010094C7FCA26E5D0278151EA4482C7BAA53>36
D<173CA2173E171E171F8384717E170384717E717E187C007FB812FEBAFC856C84CBEA03
F0727EF000FEF13F80F11FE0F107F8F101FFA2F107F8F11FE0F13F80F1FE00F001F84E5A
007FB912C0BA5A96C7FC6C5FCB127C604D5A4D5A6017074D5A95C8FC5F171E173E173CA2
48307BAC53>41 D<91381FFFFE91B6FC1303010F14FED91FF0C7FCEB7F8001FEC8FCEA01
F8485A485A485A5B48C9FCA2123EA25AA2127812F8A25AA2B712FE16FFA216FE00F0C9FC
A27EA21278127CA27EA27EA26C7E7F6C7E6C7E6C7EEA00FEEB7F80EB1FF06DB512FE0103
14FF1300021F13FE283279AD37>50 D<EE0180EE03C01607A2EE0F80A2EE1F00A2163EA2
5EA25EA24B5AA24B5AA24B5A150F5E4BC7FCA2153EA25DA25DA24A5AA24A5AA24A5AA24A
5AA24AC8FCA2143EA25CA25CA2495AA2495AA2495AA2495AA249C9FCA2133EA25B13FC5B
485AA2485AA2485AA2485AA248CAFCA2123EA25AA25AA25A12602A4E75BB00>54
D<0060161800F0163C6C167CA200781678007C16F8A2003C16F0003E1501A26CED03E0A2
6C16C06D1407A2000716806D140FA26C6CEC1F00A26CB612FEA36C5D01F8C7127CA2017C
5CA2013C5C013E1301A2011E5C011F1303A26D6C485AA201075CECC00FA2010391C7FC6E
5AA2903801F03EA20100133CECF87CA2EC7878EC7CF8A2EC3FF0A26E5AA36E5AA36E5A6E
C8FC2E3C80B92F>56 D<156015F0A21401EB07F190383FFFE0EB7C1FEBF00748486C5AD8
03C07F4848487ED80F007FA248497E001E14BC153C003E143E141FA248EB1E1F143EA214
3CA2147C00FC1580147814F8A214F0A21301A214E01303A214C0A21307A21480A2130FA2
14005B007C1500131EA2D87E3E5BA2D83E3C133E137CA21378001F5C13F8000F14784913
F800075C0003495AEBE0033901F007802603FC1FC7FCEBFFFEEBC7F0D807C0C8FCA25BA2
6CC9FC21477CBF2A>59 D<0060161800F0163CB3B26C167CA2007C16F8A26CED01F0003F
15036C6CEC07E06C6CEC0FC0D807F0EC3F80D803FE903801FF003A00FFC00FFC6DB55A01
1F14E0010391C7FC9038007FF82E347CB137>91 D<EC7FF80103B5FC011F14E0017F14F8
9039FFC00FFC3A03FE0001FFD807F09038003F80D80FC0EC0FC04848EC07E048C8EA03F0
003E150148ED00F8A248167CA248163CB3B2006016182E347CB137>I<EC01F8140FEC3F
80ECFC00495A495A495AA2130F5CB3A7131F5C133F49C7FC13FEEA03F8EA7FE048C8FCEA
7FE0EA03F8EA00FE137F6D7E131F80130FB3A7801307A26D7E6D7E6D7EEC3F80EC0FF814
011D537ABD2A>102 D<12FCEAFFC0EA07F0EA01FCEA007E7F80131F80130FB3A7801307
806D7E6D7EEB007EEC1FF0EC07F8EC1FF0EC7E00495A495A495A5C130F5CB3A7131F5C13
3F91C7FC137E485AEA07F0EAFFC000FCC8FC1D537ABD2A>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fl cmmi7 7 11
/Fl 11 119 df<1238127C12FE12FFA2127F123B1203A31206A3120C1218123812701220
08127A8614>59 D<160E163E16FEED03F8ED0FE0ED3F80EDFE00EC03F8EC0FE0EC3F8002
FEC7FCEB03F8EB0FE0EB3F8001FEC8FCEA03F8EA0FE0EA3F8000FEC9FC12F812FEEA3F80
EA0FE0EA03F8EA00FEEB3F80EB0FE0EB03F8EB00FEEC3F80EC0FE0EC03F8EC00FEED3F80
ED0FE0ED03F8ED00FE163E160E27277AA134>I<EB0FE0EB3FF8EBF81C3801E00E380380
3E0007137EEA0F00001E137C123E003C1300127CA25AA45AA31404140C0078131814306C
13E0381E07C0380FFF00EA03F8171B7C991E>99 D<15F8141FA2EC01F0A21403A215E0A2
1407A215C0A2140FEB1F8F90387FCF80EBF0EF3803C03FEA0780390F001F00A2001E5B12
3E003C133E127C147E5A147CA214FC5AECF830A3903801F060A2EA7803010E13C0393C1C
F980381FF07F3907C01E001D297CA723>I<130E131F5BA2133E131C90C7FCA7EA03E048
7EEA0C78EA187C1230A212605B12C0A2EA01F0A3485AA2485AA2EBC180EA0F81A2381F03
00A213066C5A131CEA07F06C5A11287DA617>105 D<1407EC0F80141FA21500140E91C7
FCA7EB03E0EB07F8EB0C3C1318EB303E136013C0A248485AA2C7FCA25CA4495AA4495AA4
495AA4495AA21238D87C1FC7FC12FC133E485AEA70F8EA7FE0EA1F80193380A61B>I<3B
07801FC007E03B0FE07FF01FF83B18F0E0F8783C3B30F1807CE03E903AFB007D801ED860
FEEB3F005B49133E00C14A133E5B1201A24848495BA35F4848485A1830EE01F0A23C0F80
03E003E060A218C0933801E180271F0007C013E3933800FF00000E6D48137C341B7D993B
>109 D<3907801FC0390FE07FF03918F0E0F83930F1807CEBFB00D860FE133C5B5B00C1
147C5B1201A248485BA34A5AEA07C01660EC03E0A23A0F8007C0C0A2EDC180913803C300
D81F0013C7EC01FE000EEB00F8231B7D9929>I<3807803E390FE0FF803818F3C13930F7
03C0EBFE073860FC0F13F8158039C1F0070091C7FC1201A2485AA4485AA4485AA448C8FC
A2120E1A1B7D991F>114 D<EB0FE0EB7FF8EBF03C3801C00E0003131E3807803EA2143C
000F1318EBE0006CB4FC14C06C13E06C13F06C13F813071301EA3C00007E1378A24813F0
5A387001E0EB03C0383C0F80381FFE00EA07F8171B7C991F>I<3903E001C03907F003E0
380C7807EA187C0030130314011260EBF80000C014C0A2EA01F0A2EC0180EA03E0A2EC03
00EA07C0A21406A25CA200035B6D5A3801F0E06CB45A013FC7FC1B1B7D9921>118
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fm cmr10 10 74
/Fm 74 127 df<1506150FA24B7EA24B7EA24B7EA2EDDFF0A29138018FF8A291380307FC
A291380603FEA291380E01FF140CDA1C007F141802386D7E143002706D7E146002E06D7E
5C01016E7E5C01036E7E91C7FC496E7E1306010E6E7E130C011C6E7F131801386F7E1330
01706F7E136001E06F7E5B170F484882170748C97F17030006831701488383481880001F
B9FC4818C0A24818E0A2BA12F0A23C3C7CBB45>1 D<EC0FF8EC7FFE903901F807809039
07E001C090391F8000E090383F0007017E497EA25BA2485A6F5AED018092C8FCA9ED03F0
B7FCA33901F8000F1503B3AA486C497E267FFFE0B512C0A32A3B7FBA2E>12
D<001C131C007F137F39FF80FF80A26D13C0A3007F137F001C131C00001300A400011301
01801380A20003130301001300485B00061306000E130E485B485B485B006013601A197D
B92A>34 D<030C1303031E497EA2033E130FA2033C91C7FCA2037C5BA20378131EA303F8
133EA24B133CA20201147CA24B1378A2020314F8A24B5BA302071301007FB91280BA12C0
A26C1880C7271F0007C0C7FC021E5CA3023E130FA2023C91C8FCA2027C5BA20278131EA3
02F8133E007FB91280BA12C0A26C1880280003E000F8C8FC4A5BA301071301A202805BA2
010F1303A202005BA2491307A2011E5CA3013E130FA2013C91C9FCA2017C5BA20178131E
A20130130C3A4A7BB945>I<141FEC7FC0903801F0E0903803C0600107137090380F8030
90381F00381518A25BA2133E133F15381530A215705D5D140190381F838092CAFC148714
8E02DC49B51280EB0FF85C4A9039003FF8000107ED0FC06E5D71C7FC6E140E010F150CD9
1DFC141C01391518D970FE143801E015302601C07F1470D803805D00076D6C5BD80F00EB
C00148011F5C4890380FE003003E6E48C8FC007E903807F8060203130E00FE6E5A6E6C5A
1400ED7F706C4B13036F5A6F7E6C6C6D6C5B7013066C6C496C130E6DD979FE5B281FF001
F07F133C3C07F80FE03FC0F86CB539800FFFF0C69026FE000313C0D91FF0D9007FC7FC39
3E7DBB41>38 D<121C127FEAFF80A213C0A3127F121C1200A412011380A2120313005A12
06120E5A5A5A12600A1979B917>I<146014E0EB01C0EB0380EB0700130E131E5B5BA25B
485AA2485AA212075B120F90C7FCA25A121EA2123EA35AA65AB2127CA67EA3121EA2121F
7EA27F12077F1203A26C7EA26C7E1378A27F7F130E7FEB0380EB01C0EB00E01460135278
BD20>I<12C07E12707E7E7E120F6C7E6C7EA26C7E6C7EA21378A2137C133C133E131EA2
131F7FA21480A3EB07C0A6EB03E0B2EB07C0A6EB0F80A31400A25B131EA2133E133C137C
1378A25BA2485A485AA2485A48C7FC120E5A5A5A5A5A13527CBD20>I<15301578B3A600
7FB812F8B912FCA26C17F8C80078C8FCB3A6153036367BAF41>43
D<121C127FEAFF80A213C0A3127F121C1200A412011380A2120313005A1206120E5A5A5A
12600A19798817>I<B512FCA516057F941C>I<121C127FEAFF80A5EA7F00121C09097988
17>I<EB03F8EB1FFF90387E0FC09038F803E03901E000F0484813780007147C48487FA2
48C77EA2481580A3007EEC0FC0A600FE15E0B3007E15C0A4007F141F6C1580A36C15006D
5B000F143EA26C6C5B6C6C5B6C6C485A6C6C485A90387E0FC0D91FFFC7FCEB03F8233A7D
B72A>48 D<EB01C013031307131F13FFB5FCA2131F1200B3B3A8497E007FB512F0A31C38
79B72A>I<EB0FF0EB7FFE48B57E3903E03FE0390F000FF0000E6D7E486D7E486D7E1230
00706D7E126012FCB4EC7F807FA56CC7FC121CC8FCEDFF00A34A5A5D14035D4A5A5D140F
4A5A4A5A92C7FC147C5C495A495A495A495A91C8FC011EEB01805B5B4913034848140048
5A485A000EC75A000FB6FC5A5A485CB6FCA321387CB72A>I<EB07F8EB3FFF4913C03901
F80FF03903C007F848486C7E380E0001000F80381FE0006D7FA56C5A6C5AC85A1401A25D
4A5AA24A5A5DEC0F80027EC7FCEB1FFCECFF809038000FE06E7EEC01FC816E7EED7F80A2
16C0A2153F16E0A2121EEA7F80487EA416C049137F007F1580007EC7FC0070ECFF006C49
5A121E390F8003F83907F00FF00001B512C06C6C90C7FCEB0FF8233A7DB72A>I<1538A2
157815F8A2140114031407A2140F141F141B14331473146314C313011483EB0303130713
06130C131C131813301370136013C01201EA038013005A120E120C5A123812305A12E0B7
12F8A3C73803F800AB4A7E0103B512F8A325397EB82A>I<0006140CD80780133C9038F0
03F890B5FC5D5D158092C7FC14FC38067FE090C9FCABEB07F8EB3FFE9038780F803907E0
07E090388003F0496C7E12066E7EC87EA28181A21680A4123E127F487EA490C71300485C
12E000605C12700030495A00385C6C1303001E495A6C6C485A3907E03F800001B5C7FC38
007FFCEB1FE0213A7CB72A>I<EC3FC0903801FFF0010713FC90380FE03E90383F800790
387E001F49EB3F804848137F485AA2485A000FEC3F0049131E001F91C7FCA2485AA3127F
90C9FCEB01FC903807FF8039FF1E07E090383801F0496C7E01607F01E0137E497FA24914
8016C0151FA290C713E0A57EA56C7E16C0A2121FED3F807F000F15006C6C5B15FE6C6C5B
6C6C485A3900FE07F090383FFFC06D90C7FCEB03FC233A7DB72A>I<12301238123E003F
B612E0A316C05A168016000070C712060060140E5D151800E01438485C5D5DC712014A5A
92C7FC5C140E140C141C5CA25CA214F0495AA21303A25C1307A2130FA3495AA3133FA513
7FA96DC8FC131E233B7BB82A>I<EB03F8EB1FFF017F13C09038FC07E03903F803F04848
6C7E48486C7E49137E121F48487FA2007F158090C7FCA248EC1FC0A616E0A56C143FA27F
123F001F147FA26C6C13FF3907E001DF0003149F3801F0033900FC0F1FD93FFC13C0EB07
F090C7FC153F1680A316005D000F147E487E486C5BA24A5A4A5A49485A6C48485A001C49
5A260F807FC7FC3807FFFC000113F038003FC0233A7DB72A>57 D<121C127FEAFF80A5EA
7F00121CC7FCB2121C127FEAFF80A5EA7F00121C092479A317>I<121C127FEAFF80A5EA
7F00121CC7FCB2121C127F5A1380A4127F121D1201A412031300A25A1206A2120E5A1218
12385A1260093479A317>I<007FB812F8B912FCA26C17F8CCFCAE007FB812F8B912FCA2
6C17F836167B9F41>61 D<EB3FE03801FFFE3907C03F80390E000FC0003CEB07F0003013
03007014F8007C130100FE14FC7EA4127E003CEB03F8C7FCEC07F0A2EC0FE0EC1F80EC3F
00147E147C5C495A5C495A5CA249C7FCA31306AA90C8FCA8130EEB3F80497EA56D5A010E
C7FC1E3B7CBA27>63 D<1538A3157CA315FEA34A7EA34A6C7EA202077FEC063FA2020E7F
EC0C1FA2021C7FEC180FA202387FEC3007A202707FEC6003A202C07F1501A2D901807F81
A249C77F167FA20106810107B6FCA24981010CC7121FA2496E7EA3496E7EA3496E7EA213
E0707E1201486C81D80FFC02071380B56C90B512FEA3373C7DBB3E>65
D<B712E016FC16FF0001903980007FC06C90C7EA1FE0707E707E707EA2707EA283A75F16
035F4C5A4C5A4C5A4C5AEEFF8091B500FCC7FCA291C7EA7F80EE1FE0EE07F0707E707E83
707EA21880177F18C0A7188017FFA24C13005F16034C5AEE1FF8486DEB7FF0B812C094C7
FC16F832397DB83B>I<913A01FF800180020FEBE003027F13F8903A01FF807E07903A03
FC000F0FD90FF0EB039F4948EB01DFD93F80EB00FF49C8127F01FE153F12014848151F48
48150FA248481507A2485A1703123F5B007F1601A35B00FF93C7FCAD127F6DED0180A312
3F7F001F160318006C7E5F6C7E17066C6C150E6C6C5D00001618017F15386D6C5CD91FE0
5C6D6CEB03C0D903FCEB0F80902701FF803FC7FC9039007FFFFC020F13F002011380313D
7BBA3C>I<B712C016F816FE000190398001FF806C90C7EA3FE0EE0FF0EE03F8707E707E
177FA2EF3F8018C0171F18E0170F18F0A3EF07F8A418FCAC18F8A4EF0FF0A218E0A2171F
18C0EF3F80A2EF7F0017FE4C5A4C5AEE0FF0EE3FE0486DEBFF80B8C7FC16F816C036397D
B83F>I<B812FCA30001903880000F6C90C71201EE007E173E171E170EA31706A3170783
16C0A394C7FCA31501A21503150F91B5FCA3EC000F15031501A21500A21860A318E093C7
12C0A41701A3EF0380A21707A2170F173F177F486D903807FF00B9FCA333397DB839>I<
B812F8A30001903880001F6C90C71201EE00FC177C173C171CA2170CA4170E1706A2ED01
80A21700A41503A21507151F91B5FCA3EC001F15071503A21501A692C8FCAD4813C0B612
C0A32F397DB836>I<B648B512FEA30001902680000313006C90C76C5AB3A491B6FCA391
C71201B3A6486D497EB648B512FEA337397DB83E>72 D<B612C0A3C6EBC0006D5AB3B3AD
497EB612C0A31A397EB81E>I<013FB512E0A39039001FFC00EC07F8B3B3A3123FEA7F80
EAFFC0A44A5A1380D87F005B0070131F6C5C6C495A6C49C7FC380781FC3801FFF038007F
80233B7DB82B>I<B649B5FCA3000101809038007FF06C90C8EA3F80053EC7FC173C1738
5F5F4C5A4C5A4CC8FC160E5E5E5E5E4B5AED0780030EC9FC5D153E157E15FF5C4A7F4A6C
7E140E4A6C7E4A6C7E14704A6C7E4A6C7E14804A6C7E6F7EA26F7F707EA2707E707EA270
7EA2707E707EA2707E707F8484486D497FB6011FEBFF80A339397DB841>I<B5933807FF
F86E5DA20001F0FC002600DFC0ED1BF8A2D9CFE01533A3D9C7F01563A3D9C3F815C3A2D9
C1FCEC0183A3D9C0FEEC0303A2027F1406A36E6C130CA36E6C1318A26E6C1330A36E6C13
60A26E6C13C0A3913901FC0180A3913900FE0300A2ED7F06A3ED3F8CA2ED1FD8A3ED0FF0
A3486C6D5A487ED80FFC6D48497EB500C00203B512F8A2ED018045397DB84C>77
D<B5913807FFFE8080C69238007FE06EEC1F80D9DFF0EC0F001706EBCFF8EBC7FCA2EBC3
FEEBC1FFA201C07F6E7EA26E7E6E7E81140F6E7E8114036E7E168080ED7FC016E0153FED
1FF0ED0FF8A2ED07FCED03FEA2ED01FF6F1386A2EE7FC6EE3FE6A2EE1FF6EE0FFEA21607
1603A216011600A2177E486C153E487ED80FFC151EB500C0140EA2170637397DB83E>I<
EC03FF021F13E09138FE01FC903901F8007ED907E0EB1F8049486D7ED93F80EB07F049C7
6C7E01FE6E7E48486E7E49157E0003167F4848ED3F80A24848ED1FC0A2001F17E049150F
003F17F0A3007F17F8491507A300FF17FCAC007F17F86D150FA3003F17F0A26C6CED1FE0
A36C6CED3FC0000717806D157F000317006C6C15FEA26C6C4A5A017F4A5A6D6C495A6D6C
495AD907E0EB1F80D903F8017FC7FC903900FE01FC91381FFFE0020390C8FC363D7BBA41
>I<B712C016F816FE000190398001FF806C90C7EA3FC0EE0FE0EE07F0EE03F817FC17FE
1601A217FFA717FEA2EE03FCA2EE07F817F0EE0FE0EE3FC0923801FF0091B512FC16F091
C9FCB3A5487FB6FCA330397DB839>I<B612FEEDFFE016F8000190388007FE6C90C76C7E
EE3FC0707E707E707EA2707EA283A65FA24C5AA24C5A4C5AEE3F8004FFC8FCED07FC91B5
12E05E9138000FF0ED03F8ED00FE82707E707EA2161F83A583A6F00180A217F8160F1803
486D01071400B66D6C5A04011306933800FE0ECAEA3FFCEF07F0393B7DB83D>82
D<D90FF813C090383FFE0190B512813903F807E33907E000F74848137F4848133F48C712
1F003E140F007E1407A2007C140312FC1501A36C1400A37E6D14006C7E7F13F86CB47E6C
13F8ECFF806C14E06C14F86C14FEC680013F1480010714C0EB007F020713E0EC007FED3F
F0151F150FED07F8A200C01403A21501A37EA216F07E15036C15E06C14076C15C06C140F
6DEB1F80D8FBF0EB3F00D8F0FE13FE39E03FFFF8010F13E0D8C00190C7FC253D7CBA2E>
I<003FB812E0A3D9C003EB001F273E0001FE130348EE01F00078160000701770A3006017
30A400E01738481718A4C71600B3B0913807FF80011FB612E0A335397DB83C>I<B69038
07FFFEA3000101809038007FE06C90C8EA1F80EF0F001706B3B2170E6D150C80171C133F
17186D6C14385F6D6C14F06D6C5C6D6C495A6D6CEB07806D6C49C7FC91387F807E91381F
FFF8020713E09138007F80373B7DB83E>I<B5D8FC07B5D8F001B5FCA30007902780001F
FEC7EA1FF86C48C7D80FF8EC07E000010307ED03C01B807F6C6F6C1500A26E5F017F6E6C
1406A280013F4A6C5CA280011F4A6D5BEE067FA26D6C010E6D5BEE0C3FA26D6C011C6D5B
EE181FA26D6C6F5BEE300FA26D6C6F485AEE6007A26D6C4CC7FC9338C003FCA203805D91
3B7F818001FE06A203C1150EDA3FC3C7EAFF0CA203E3151CDA1FE6EC7F98A215F6DA0FFC
EC3FF0A302075E4B141FA202035E4B140FA202015E4B1407A2020093C8FC4B80503B7EB8
55>87 D<EAFFF8A4EAF000B3B3B3B3A3EAFFF8A40D5378BD17>91
D<3901800180000313033907000700000E130E485B001813180038133800301330007013
7000601360A200E013E0485BA400CE13CE39FF80FF806D13C0A3007F137FA2393F803F80
390E000E001A1974B92A>I<EAFFF8A4EA0078B3B3B3B3A3EAFFF8A40D537FBD17>I<EB1F
E0EBFFFC3803E03F3907000F80390F8007E0486C6C7E13E06E7EA26E7E6C5A6C5AC8FCA4
147FEB07FFEB3FE0EBFE00EA03F8EA0FF0EA1FC0123F485A90C7FC160C12FEA31401A26C
13036CEB077C903980063E18383FC01E3A0FE0781FF03A03FFF00FE03A007F8007C02627
7DA52A>97 D<EA03F012FFA3120F1203B0EC1FE0EC7FF89038F1E03E9039F3801F809039
F7000FC001FEEB07E049EB03F049EB01F85BED00FCA216FEA2167E167FAA167E16FEA216
FC15016D14F8ED03F07F01EEEB07E001C6EB0FC09039C7801F00903881E07E903800FFF8
C7EA1FC0283B7EB92E>I<EB03FC90381FFF8090387E03E03901F80070484813F83907E0
01FC380FC003A2EA1F80123F90380001F848EB00F01500A2127E12FEAA127E127FA26C14
067F001F140E6D130C000F141C6C6C13386C6C13706C6C13E039007C07C090381FFF00EB
07F81F277DA525>I<ED0FC0EC03FFA3EC003F150FB0EB03F8EB1FFF90387E078F9038F8
01EF3903F0007F4848133F4848131FA24848130F123F90C7FC5AA2127E12FEAA127E127F
A27EA26C6C131FA26C6C133F6C6C137F6C6CEBEFF03A01F801CFFF39007C078F90381FFE
0FD907F813C0283B7DB92E>I<EB07F8EB1FFF90387C0FC03901F803E03903F001F0D807
E013F8380FC0004848137CA248C7127E153E5A153F127E12FEA3B7FCA248C8FCA5127EA2
127FA26C14037F001F14076C6C13060007140E6D131CD801F013386C6C137090387E03E0
90381FFF80903803FC0020277EA525>I<147E903803FF8090380FC1E0EB1F8790383F0F
F0137EA213FCA23901F803C091C7FCADB512FCA3D801F8C7FCB3AB487E387FFFF8A31C3B
7FBA19>I<ED03F090390FF00FF890393FFC3C3C9039F81F707C3901F00FE03903E007C0
3A07C003E010000FECF000A248486C7EA86C6C485AA200075C6C6C485A6D485A6D48C7FC
38073FFC38060FF0000EC9FCA4120FA213C06CB512C015F86C14FE6CECFF804815C03A0F
80007FE048C7EA0FF0003E140348140116F8481400A56C1401007C15F06CEC03E0003F14
07D80F80EB0F80D807E0EB3F003901FC01FC39007FFFF0010790C7FC26387EA52A>I<EA
03F012FFA3120F1203B0EC0FF0EC3FFCECF03F9039F1C01F809039F3800FC0EBF70013FE
496D7EA25BA35BB3A3486C497EB500C1B51280A3293A7EB92E>I<EA0380EA0FE0487EA5
6C5AEA0380C8FCAAEA03F012FFA312071203B3AA487EB512C0A312387EB717>I<EB01C0
EB07F0EB0FF8A5EB07F0EB01C090C7FCAAEB01F813FFA313071301B3B3A2123C127E00FF
13F01303A214E038FE07C0127C383C0F00EA0FFEEA03F8154984B719>I<EA03F012FFA3
120F1203B1913801FFFCA39138007FC01600157C15705D4A5A4A5A4AC7FC141E14381478
14FC13F1EBF3FEEBF73F01FE7FEBF81F496C7E8114076E7E6E7E811400157E157F811680
ED1FC0486CEB3FF0B500C0B5FCA3283A7EB92C>I<EA03F012FFA3120F1203B3B3AD487E
B512C0A3123A7EB917>I<2703F00FF0EB1FE000FFD93FFCEB7FF8913AF03F01E07E903B
F1C01F83803F3D0FF3800FC7001F802603F70013CE01FE14DC49D907F8EB0FC0A2495CA3
495CB3A3486C496CEB1FE0B500C1B50083B5FCA340257EA445>I<3903F00FF000FFEB3F
FCECF03F9039F1C01F803A0FF3800FC03803F70013FE496D7EA25BA35BB3A3486C497EB5
00C1B51280A329257EA42E>I<EB03FE90380FFF8090383E03E09038F800F84848137C48
487F48487F4848EB0F80001F15C090C712074815E0A2007EEC03F0A400FE15F8A9007E15
F0A2007F14076C15E0A26C6CEB0FC0000F15806D131F6C6CEB3F006C6C137EC66C13F890
387E03F090381FFFC0D903FEC7FC25277EA52A>I<3903F01FE000FFEB7FF89038F1E07E
9039F3801F803A0FF7000FC0D803FEEB07E049EB03F04914F849130116FC150016FEA316
7FAA16FEA3ED01FCA26DEB03F816F06D13076DEB0FE001F614C09039F7803F009038F1E0
7E9038F0FFF8EC1FC091C8FCAB487EB512C0A328357EA42E>I<D903F813C090381FFE01
90387E07819038FC01C33903F000E3000714774848133749133F001F141F485A150F48C7
FCA312FEAA127FA37E6D131F121F6D133F120F6C6C137F6C6C13EF3901F801CF39007E07
8F90381FFE0FEB07F890C7FCABED1FE00203B5FCA328357DA42C>I<3807E01F00FFEB7F
C09038E1E3E09038E387F0380FE707EA03E613EE9038EC03E09038FC0080491300A45BB3
A2487EB512F0A31C257EA421>I<EBFF03000313E7380F80FF381E003F487F487F00707F
12F0A2807EA27EB490C7FCEA7FE013FF6C13E06C13F86C7F00037FC67F01071380EB007F
141F00C0EB0FC01407A26C1303A37E15806C13077EEC0F00B4131E38F3C07C38E1FFF038
C03F801A277DA521>I<1318A51338A31378A313F8120112031207001FB5FCB6FCA2D801
F8C7FCB215C0A93800FC011580EB7C03017E13006D5AEB0FFEEB01F81A347FB220>I<D8
03F0EB07E000FFEB01FFA3000FEB001F00031407B3A4150FA3151F12016D133F0000EC77
F86D9038E7FF8090383F03C790381FFF87903A03FC07E00029267EA42E>I<B538803FFE
A33A0FF8000FF06C48EB07E00003EC03C06D148000011500A26C6C1306A26D130E017E13
0CA26D5BA2EC8038011F1330A26D6C5AA214E001075BA2903803F180A3D901FBC7FCA214
FF6D5AA2147CA31438A227257EA32C>I<B53A1FFFE03FFEA3260FF8009038000FF86C48
017EEB03E018C00003023EEB0180A26C6C013FEB0300A36C6CEC8006156FA2017E9038EF
C00C15C7A2D93F016D5A15830281EBF038D91F831430150102C3EBF87090260FC6001360
A2D907E66D5A02EC137CA2D903FCEB7F804A133FA2010192C7FC4A7FA20100141E4A130E
0260130C37257EA33C>I<B538807FFFA33A03FE003FF00001EC1F80000092C7FC017E13
1C6D13186D6C5AECC070010F5B6D6C5AECF180EB03FB6DB4C8FC6D5AA2147F804A7E8114
CF903801C7E090380383F090380703F8EB0601496C7E011C137E49137F01787F496D7E48
6C80000FEC3FF0D8FFFE90B51280A329247FA32C>I<B538803FFEA33A0FF8000FF06C48
EB07C00003EC03806C7E16007F00001406A2017E5BA2137F6D5BA26D6C5AA2ECC070010F
1360A26D6C5AA214F101035BA2D901FBC7FCA214FF6D5AA2147CA31438A21430A2147014
60A25CA2EA7C0100FE5B130391C8FC1306EAFC0EEA701C6C5AEA1FF0EA0FC027357EA32C
>I<003FB512FCA2EB8003D83E0013F8003CEB07F00038EB0FE012300070EB1FC0EC3F80
0060137F150014FE495AA2C6485A495AA2495A495A495AA290387F000613FEA2485A485A
0007140E5B4848130C4848131CA24848133C48C7127C48EB03FC90B5FCA21F247EA325>
I<D801E01340D807F813E0390FFE01C0391FFF8780393C3FFF0038700FFE38E003FC3840
00F01B0879B62A>126 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fn cmmi10 10 22
/Fn 22 121 df<121C127FEAFF80A5EA7F00121C0909798817>58
D<121C127FEAFF80A213C0A3127F121C1200A412011380A2120313005A1206120E5A5A5A
12600A19798817>I<150C151E153EA2153C157CA2157815F8A215F01401A215E01403A2
15C01407A21580140FA215005CA2141E143EA2143C147CA2147814F8A25C1301A25C1303
A2495AA25C130FA291C7FC5BA2131E133EA2133C137CA2137813F8A25B1201A25B1203A2
5B1207A25B120FA290C8FC5AA2121E123EA2123C127CA2127812F8A25A12601F537BBD2A
>61 D<126012FCB4FCEA7FC0EA1FF0EA07FCEA01FF38007FC0EB1FF0EB07FCEB01FF9038
007FC0EC1FF0EC07FCEC01FF9138007FC0ED1FF0ED07FCED01FF9238007FC0EE1FF0EE07
FCEE01FF9338007F80EF1FC0A2EF7F80933801FF00EE07FCEE1FF0EE7FC04B48C7FCED07
FCED1FF0ED7FC04A48C8FCEC07FCEC1FF0EC7FC04948C9FCEB07FCEB1FF0EB7FC04848CA
FCEA07FCEA3FF0EA7FC048CBFC12FC1270323279AD41>I<9339FF8001C0030F13E0037F
9038F80380913A01FF807E07913A07F8000F0FDA1FE0EB079FDA3F80903803BF0002FFC7
6CB4FCD901FC80495A4948157E495A495A4948153E017F163C49C9FC5B1201484816385B
1207485A1830121F4993C7FCA2485AA3127F5BA312FF90CCFCA41703A25F1706A26C160E
170C171C5F6C7E5F001F5E6D4A5A6C6C4A5A16076C6C020EC8FC6C6C143C6C6C5C6CB449
5A90393FE00FC0010FB5C9FC010313FC9038007FC03A3D7CBA3B>67
D<0103B812E05BA290260007F8C7123F4B140FF003C0140F18015DA2141FA25D1980143F
A25D1760027F14E095C7FC92C75AA24A1301A24A495A16070101141F91B6FC94C8FCA290
3903FC001F824A130EA21307A24A130CA2010F141CA24A90C9FCA2131FA25CA2133FA25C
A2137FA291CBFC497EB612C0A33B397DB835>70 D<0103B5D8F803B512F8495DA2902600
07F8C73807F8004B5DA2020F150F615DA2021F151F615DA2023F153F615DA2027F157F96
C7FC92C8FCA24A5D605CA249B7FC60A202FCC7120101031503605CA201071507605CA201
0F150F605CA2011F151F605CA2013F153F605CA2017F157F95C8FC91C8FC496C4A7EB690
B6FCA345397DB845>72 D<0107B512FCA216F890390007F8005DA2140FA25DA2141FA25D
A2143FA25DA2147FA292C7FCA25CA25CA21301A25CA21303A25CA21307A25CA2130FA25C
A2131FA25CA2133FA25CA2137FA291C8FC497EB6FCA326397DB824>I<0103B7FC4916E0
18F8903B0007F80007FC4BEB00FE187F020FED3F80F01FC05DA2021F16E0A25DA2143FF0
3FC05DA2027FED7F80A292C8130018FE4A4A5A604AEC07F04D5A0101ED3FC04CB4C7FC91
B612FC17E0D903FCCAFCA25CA21307A25CA2130FA25CA2131FA25CA2133FA25CA2137FA2
91CBFC497EB6FCA33B397DB835>80 D<0003B812FEA25A903AF8003FC00101C091388000
7E4848163C90C7007F141C121E001C92C7FCA2485CA200305C007017180060130112E048
5CA21403C716005DA21407A25DA2140FA25DA2141FA25DA2143FA25DA2147FA292C9FCA2
5CA25CA21301A25CA21303A25CEB0FFC003FB6FC5AA237397EB831>84
D<267FFFFC91383FFFC0B55DA2000390C83807FC006C48ED03E06060000094C7FC5F1706
5FA25F6D5DA26D5D17E05F4C5AA24CC8FC6E1306A2013F5C161C16185EA25E6E5BA2011F
495A150393C9FC1506A25D6E5AA2010F5B157015605DA2ECE18002E3CAFC14F3EB07F614
FE5C5CA25C5CA26D5AA25C91CBFC3A3B7CB830>86 D<163FED1FFFA3ED007F167EA216FE
A216FCA21501A216F8A21503A216F0A21507A2027E13E0903803FF8790380FC1CF90381F
00EF017EEB7FC049133F485A4848131F000715805B000F143F485A1600485A5D127F90C7
127EA215FE5A485CA21401A248ECF80CA21403161CEDF0181407007C1538007E010F1330
003E131F027B13706C01E113E03A0F83C0F9C03A03FF007F80D800FCEB1F00283B7DB92B
>100 D<16F8ED03FEED0F8792381F0F80ED3E3F167F157CA215FC1700161C4A48C7FCA4
14035DA414075DA20107B512F0A39026000FE0C7FC5DA4141F5DA4143F92C8FCA45C147E
A514FE5CA413015CA4495AA45C1307A25C121E123F387F8F80A200FF90C9FC131E12FEEA
7C3CEA7878EA1FF0EA07C0294C7CBA29>102 D<EB03F0EA01FFA3EA00075CA3130F5CA3
131F5CA3133F91C9FCA35B90387E03F8EC0FFF91383C0F809039FEF007C0D9FDC07FEBFF
80EC0003485A5BA249130712035BA2150F00075D5BA2151F000F5D5B153F93C7FC121F49
90387F0180157EEDFE03003F02FC130090C7FC5EEDF80648150E007E150C161C5E00FEEC
787048EC3FE00038EC0F80293B7CB930>104 D<14E0EB03F8A21307A314F0EB01C090C7
FCAB13F8EA03FEEA070F000E1380121C121812381230EA701F1260133F00E0130012C05B
EA007EA213FE5B1201A25B12035BA20007131813E01438000F133013C01470EB806014E0
14C01381EB838038078700EA03FEEA00F815397EB71D>I<EB03F0EA01FFA3EA00075CA3
130F5CA3131F5CA3133F91C8FCA35B017EEB07C0ED1FF0ED783801FEEBE0F89039FC01C1
FCEC0383EC07070001130ED9F81C13F891383803F091387001E0000349C7FCEBF1C0EBF3
8001F7C8FCEA07FEA2EBFFE0EBE7F8380FE0FEEBC07F6E7E141F001F80D9800F1330A216
70003F011F136001001380A216E04815C0007E1481020F1380158300FE903807870048EB
03FE0038EB00F8263B7CB92B>107 D<D803E0137F3A07F801FFE03A0E3C0781F03A1C3E
1E00F826383F387F00305B4A137C00705B00605BA200E090C712FC485A137EA200001401
01FE5C5BA2150300015D5B15075E120349010F133016C0031F13700007ED80605B17E0EE
00C0000F15014915801603EE0700001FEC0F0E49EB07FC0007C7EA01F02C267EA432>
110 D<EC1FC0ECFFF8903807E07E90380F801F90393F000F80017E14C0491307484814E0
485A4848EB03F0120F5B121F48481307A2127F90C7FCA2150F5A4815E0A2151F16C0A248
EC3F8016005D157E007E5C4A5A003E495A003F495A6C495A6C6C48C7FC3807E07E3801FF
F038003F8024267DA428>I<3903E001F83907F807FE390E3C1E07391C3E381F3A183F70
3F800038EBE07F0030EBC0FF00705B00601500EC007E153CD8E07F90C7FCEAC07EA21200
13FE5BA312015BA312035BA312075BA3120F5BA3121F5B0007C9FC21267EA425>114
D<EB01C0497E1307A4130F5CA3131F5CA3133F91C7FC007FB51280A2B6FCD8007EC7FCA3
13FE5BA312015BA312035BA312075BA3120FEBC006A2140E001F130CEB801C141814385C
146014E0380F81C038078780D803FEC7FCEA00F819357EB31E>116
D<01F8EB03C0D803FEEB07E0D8070F130F000E018013F0121C12180038140700301403D8
701F130112601500D8E03F14E000C090C7FC5BEA007E16C013FE5B1501000115805B1503
16001203495B1506150E150C151C151815385D00015C6D485A6C6C485AD97E0FC7FCEB1F
FEEB07F024267EA428>118 D<903907E001F090391FF807FC9039783E0E0F9039E01F1C
1FD801C09038383F803A03800FF07F0100EBE0FF5A000E4A1300000C157E021F133C001C
4AC7FC1218A2C7123FA292C8FCA25CA2147EA214FEA24A130CA20101141C001E1518003F
5BD87F81143801835C00FF1560010714E03AFE0E7C01C0D87C1C495A2778383E0FC7FC39
1FF00FFC3907C003F029267EA42F>120 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fo cmr12 12 12
/Fo 12 115 df<121EEA7F80A2EAFFC0A4EA7F80A2EA1E00C7FCB3A5121EEA7F80A2EAFF
C0A4EA7F80A2EA1E000A2B78AA1B>58 D<B712E016FF17C000019039C0003FF86C6C48EB
03FCEE00FF717E717E717E717E717EA284170384A760A21707604D5AA24D5A4D5A4DC8FC
EE01FEEE07F8EE3FE091B6C9FC16FC913980007F80EE0FE0707EEE03FC707E160083717E
A2717EA784A71A6084171FA21AE0716C13C02601FFE002071301B600C01680943801FC03
943900FE0700CBEA3FFEF007F843467CC348>82 D<49B41303010FEBE007013F13F89039
FE00FE0FD801F8131FD807E0EB079F49EB03DF48486DB4FC48C8FC4881003E81127E8212
7C00FC81A282A37E82A27EA26C6C91C7FC7F7FEA3FF813FE381FFFE06C13FE6CEBFFE06C
14FC6C14FF6C15C0013F14F0010F80010180D9001F7F14019138001FFF03031380816F13
C0167F163F161F17E000C0150FA31607A37EA36C16C0160F7E17806C151F6C16006C5D6D
147ED8FBC05CD8F9F0495AD8F07C495A90393FC00FE0D8E00FB51280010149C7FC39C000
3FF02B487BC536>I<B692383FFFF0A3000301E003071300C649ED01FC4A5E017F705A6E
5E133F616E1501011F5FA26D6C4BC7FCA28001071606A26E150E0103160CA26D6C5DA280
6D5EA26F1470027F156081023F5DA281021F4A5AA26F1303020F92C8FC8102071406A26F
130E0203140CA26E6C5BA2816E5CA2EE8070037F1360A26F6C5AA216E092381FE180A216
F3030F90C9FC16FBED07FEA36F5AA36F5AA26F5AA3166044467EC349>86
D<EB07FC90383FFF809038F80FE03903C003F048C66C7E000E6D7ED80FC0137E486C137F
6D6D7EA36F7EA26C5AEA0380C8FCA4EC0FFF49B5FC90380FFE1FEB3FC0EBFF00EA03FC48
5A485A485A485A127F5B176048C7FCA3153FA36D137F007F14EF6D9038C7E0C0003F1301
3A1FE00783F13B07F81E03FF802701FFFC0113003A001FE0007C2B2E7CAC31>97
D<EC7F80903803FFF090380FC07C90383F000F01FCEB03804848EB01C00003140F4848EB
1FE049133F120F485AA2485AED1FC0007FEC070092C7FCA290C9FC5AAB7E7FA2123F1630
7F001F15706C6C146016E06C6C14C06C6C13010001EC03806C6CEB0700013F131E90381F
C078903807FFF001001380242E7DAC2B>99 D<EB01FE903807FFC090381F03F090387E00
FC49137E48487F485A4848EB1F80000F15C049130F121F484814E01507A2007F15F090C7
FCA25AA390B6FCA290C9FCA67EA27FA2123F16306C7E1670000F15606D14E06C6C14C000
0314016C6CEB03806C6CEB0700013E131E90381F80F8903803FFE0010090C7FC242E7DAC
2B>101 D<EA01E0EA07F8A2487EA46C5AA2EA01E0C8FCADEA01FC12FFA3120712031201
B3B0487EB512F8A315437DC21C>105 D<EA01FC12FFA3120712031201B3A292381FFFE0
A36F1300ED07F816E05E5E030EC7FC5D5D5D5D4A5A4A5A4AC8FC5CEC3F804A7E14FF9038
FDCFE09038FF8FF01407496C7E01FC7F14016E7E81816F7E82151F6F7E821507826F7E82
82486C491380B5D8F81F13F8A32D457DC433>107 D<3901FC01FE00FF903807FFC09138
1E07F091383801F8000701707F0003EBE0002601FDC07F5C01FF147F91C7FCA25BA35BB3
A8486CECFF80B5D8F83F13FEA32F2C7DAB36>110 D<3901FC03FC00FF90380FFF809138
3C07E091387001F83A07FDE000FE00030180137FD801FFEC3F8091C7EA1FC04915E04914
0F17F0160717F8160317FCA3EE01FEABEE03FCA3EE07F8A217F0160F6D15E0EE1FC06D14
3F17806EEB7E00D9FDC05B9039FCF003F891383C0FE091381FFF80DA03FCC7FC91C9FCAE
487EB512F8A32F3F7DAB36>112 D<3903F803F000FFEB1FFCEC3C3EEC707F0007EBE0FF
3803F9C000015B13FBEC007E153C01FF13005BA45BB3A748B4FCB512FEA3202C7DAB26>
114 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fp cmr17 17.28 20
/Fp 20 122 df<150E151E153C157815F0EC01E0EC03C01407EC0F80EC1F00143EA25C5C
13015C495A13075C130F5C131F91C7FC5B133E137E137C13FCA2485AA3485AA3485AA312
0F5BA3121F5BA3123FA390C8FCA25AA5127EA312FEB3A7127EA3127FA57EA27FA3121FA3
7F120FA37F1207A36C7EA36C7EA36C7EA2137C137E133E133F7F80130F8013078013036D
7E801300147C80A280EC0F80EC07C01403EC01E0EC00F01578153C151E150E1F8F73EA33
>40 D<12E07E12787E7E7E6C7E7F6C7E6C7E6C7EA2137C7F133F7F6D7E80130780130380
130180130080147C147EA280A3EC1F80A3EC0FC0A315E01407A315F01403A315F8A31401
A215FCA51400A315FEB3A715FCA31401A515F8A21403A315F0A3140715E0A3140F15C0A3
EC1F80A3EC3F00A3147EA2147C14FC5C13015C13035C13075C130F5C49C7FC5B133E5B5B
A2485A485A485A5B48C8FC121E5A5A5A5A1F8F7AEA33>I<B712F0A7240780A12B>45
D<187018F8A2170118F0A2170318E0A2170718C0A2170F1880A2171F1800A25F173EA217
7E177CA217FC5F16015FA216035FA216075FA2160F5FA2161F94C7FCA25E163EA2167E16
7CA216FC5E15015EA215035EA215075EA2150F5EA2151F93C8FCA25D153EA2157E157CA2
15FC5D14015DA214035DA214075DA2140F5DA2141F92C9FCA25C143EA2147E147CA214FC
5C13015CA213035CA213075CA2130F5CA2131F91CAFCA25B133EA2137E137CA213FC5B12
015BA212035BA212075BA2120F5BA2121F90CBFCA25A123EA2127E127CA212FC5AA21270
358F7AEA42>47 D<4AB4FC021F13F0027F13FC903901FF01FF903A03F8003F80D90FE0EB
0FE049486D7E49486D7E49C76C7E017E140049157E0001167F49810003178049151F0007
17C049150F000F17E0A3001F17F0491507A2003F17F8A54848ED03FCA700FF17FEB3A800
7F17FCA56D1507A3003F17F8A4001F17F06D150FA2000F17E0A36C6CED1FC0A200031780
6D153F000117006D5D6C6C15FE017E5D017F14016D6C495A6D6C495A6D6C495AD903F8EB
3F806DB448B4C7FC9039007FFFFC021F13F0020190C8FC37607BDD42>I<EC01C0140314
07140F143F147FEB03FF130F90B5FCB6FCEBFC7F13F01300C7FCB3B3B3B3A24A7EA20107
13FCB812E0A42B5E74DD42>I<EC0FFE91387FFFE00103B512F8010F14FE903A1FE00FFF
8090263E000113E001FC6D6C7ED801F06E7E4848EC0FFC496E7E48486E7E48C81480000E
81001E6F13C0121C003CEE7FE012380078EE3FF01270A3B46CED1FF813E0A27FA66C5A6C
5A0006C913F0CA123FA318E0177FA2EFFFC0A218805E18004C5A16075F4C5A5F161F4C5A
4C5A5F4CC7FC4B5A4B5A5E4B5A4B5A4B5A4B5A4BC8FC157E5D4A5A4A5A4A5A4A5A4A5A4A
C9FC143E4A15385C495A495A49481570495A49C9FC131E5B4916F05B484816E048481501
4848150348B8FCA25A5A5AB912C0A4355E7ADD42>I<1778A217F81601A216031607A216
0F161FA2163FA2167F16FF16EF1501ED03CF168F1507160F150E151E151C153C15781570
15F015E0EC01C0140315801407EC0F00140E141E141C5C1478147014F0495A5C13035C49
C7FC5B130E131E5B133813785B5B12015B1203485A90C8FC5A121E121C123C12385A12F0
BA12E0A4C9D80FF8C7FCB34C7EEE7FFF4AB712C0A43B5F7DDE42>52
D<B812FCEFFFE018FCF0FF80C601FCC7000F13E0D93FF89138007FF8011FEE1FFCF007FF
06017F727FF13FE0737E86737E737EA2868587A28587A96361A298C8FC6162624F5A191F
4F5A4F5AF1FF804E90C9FCF007FEF01FF8F0FFE0050F138091B700FCCAFC18E08402F8C7
EA1FFE943801FF80716C7EF03FF0727EF007FC727E85727F8486737EA3737EAA86AA1DE0
86191FA3070F14017414C007071403496C8390B570EC0780B76F9038800F00736D5A9738
3FF03E97380FFFFCCD000313F09738003FC05B6479E162>82 D<DA07FF1403023F01F05B
49B512FC010702FF5B90260FFC0013C0D93FE090380FF01FD97F80EB03F801FEC86C5A48
48157E4848ED1F7F48486F5A4848815B001F824981003F8290CAFC4883A2007E83A212FE
84A384A27EA36D82A26C7EA26D93C7FC6C7E7F7F6C7E6D7E6C13E06C13FCECFFC06C14F8
6CECFF806C15F86DECFF80011F15E06D15F8010315FE01006F7E021F81020181DA003F80
030380DB003F7F04037FEE007FEF1FFF71138017037113C083A2F07FE0183FA2181F00E0
18F0180FA41807A27EA47E19E0180F7E19C07E6C171F19806D163F6D17006D5E6D16FE48
6C5E6D4B5AD8FC7F1503D91F80EC0FF026F80FE04A5AD907FCEC7F8029F001FFE003FFC7
FC6D6CB512FC48011F14F0020314C0489026001FFEC8FC3C667AE349>I<EC3FF0903803
FFFE010F6D7E90393FC03FE090397E0007F801F86D7ED801E06D7E48486D7E48486E7E48
C86C7E7F01F06E7E487E6D6E7EA3707EA36C5AEA03E0C9FCA6167FED7FFF020FB5FC9138
7FF807903801FF80903807FC00EB1FF0EB7FC0495AD803FEC7FC485A120F5B485A485AA2
484817E0A312FF5BA2160FA3161F6D141B007F153B16736D913971FC01C06C6C14E1001F
EC01C1D80FFC903A0780FE03806C6C903A0F00FF07002701FF807E6DB4FC27007FFFF86D
5A011F01E0EB1FF8010190C7EA07E03B417ABF42>97 D<EC03FE91381FFFE091B512F890
3901FE03FE903A07F0007F8049486D7ED93FC06D7E49C76C7E496E7E4914034848814848
1401000782491400000F8283485A1880123F49153FA2007F17C0A35BA212FF90B8FCA301
80CAFCA9127F7FA3123FA27F121FEF01C06C7E17036C6C1680A26C6C15070001EE0F006D
150E6C6C151E6D6C5C6D6C5C6D6C5CD907F0EB03E0D903FC495A902700FF803FC7FC9138
3FFFFC020F13F00201138032417CBF3A>101 D<F03F80DA03FC903801FFE091273FFFC0
0713F091B539F01FC1F8903B03FC03FC3E03903A07F000FE784948EB7FE04948EB3FC049
48011FEB01F049C76C6CC7FC01FE6E7EA248486E7EA2000382A2491401000782AA00035E
6D1403A200015EA26C6C4A5AA2017F4A5A6D6C495A6D6C495A496C49C8FCD937F013FE90
3973FC03FC0160B512F0D9E03F13C0DA03FCC9FC4848CBFCA57FA27FA27F6C7E13FF91B5
12FE6DECFFF06D15FE6D6F7E6D16E084013F16FC01FEC700017FD803F8EC001FD807E0ED
03FF4848030013804848167F003FEF3FC090CA121F127EF00FE012FE481707A66C170F00
7E18C0A2007F171F6C6CEE3F806C6CEE7F00000F177ED807F04B5A6C6C4B5A6C6C4B5AD8
007FED1FC0D93FE0ECFF80D90FFED90FFEC7FC0101B612F0D9003F1480020101F0C8FC3D
5E7DBF42>103 D<133C13FF487F487FA66C5B6C90C7FC133C90C8FCB3A2EB03C0EA07FF
127FA41201EA007FA2133FB3B3AC497E497EB612E0A41B5F7DDE23>105
D<EB03C0EA07FFB5FCA41201EA007FA2133FB3B3B3B3AD497E497EB612F0A41C647DE323
>108 D<D903C0EB7FE0D807FF903803FFFCB5010F13FFDB3F0013C00378EB1FE04B6D7E
0001D9C1C06D7E27007FC3808002C7C71203D93FCE81170114DC14D802F86E7E5CA35CA3
5CB3B3496C4A7F496C4A7FB6D8F003B612C0A4423F7DBE49>110
D<9039078003F8D807FFEB0FFFB5013F13C092387C0FE0913881F01F9238E03FF00001EB
838039007F8700148FEB3F8E029CEB1FE0EE0FC00298EB030002B890C7FCA214B014F0A2
5CA55CB3B0497EEBFFF8B612FCA42C3F7CBE33>114 D<9139FFE00180010FEBFC03017F
EBFF073A01FF001FCFD803F8EB03EFD807E0EB01FF48487F4848147F48C8123F003E151F
007E150F127CA200FC1507A316037EA27E7F6C7E6D91C7FC13F8EA3FFE381FFFF06CEBFF
806C14F86C14FF6C15C06C6C14F0011F80010714FED9007F7F02031480DA003F13C01503
030013E0167F00E0ED1FF0160F17F86C15071603A36C1501A37EA26C16F016037E17E06D
14076DEC0FC06D1580D8FDF0141FD8F8F8EC7F00013E14FC3AF01FC00FF80107B512E0D8
E001148027C0003FF8C7FC2D417DBF34>I<1438A71478A414F8A31301A31303A2130713
0F131FA2137F13FF1203000F90B6FCB8FCA3260007F8C8FCB3AE17E0AE6D6CEB01C0A316
036D6C148016076D6C14006E6C5A91383FC01E91381FF07C6EB45A020313E09138007F80
2B597FD733>I<B66C49B512E0A4000101F8C8387FFE0026007FE0ED1FF819E0013F705A
61131F6E93C7FC010F160EA26D6C5DA26E153C01031638A26D6C5DA26E15F06D5EA26E6C
495AA26F1303023F5DA26F1307021F92C8FC6F5B020F140EA26F131E0207141C6F133C02
031438A26F1378020114706F13F06E5CA21681037F5B16C3033F5BA216E7031F90C9FC16
FF6F5AA36F5AA26F5AA36F5AA26F5AA215015E15035EA2150793CAFC5D150EA2151E151C
153CD81F801338487E486C5BA25D14015D49485A383F80074948CBFC001E133E380FC0FC
6CB45A000113E06C6CCCFC435B7FBD46>121 D E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin

%%EndSetup
%%Page: 1 1
1 0 bop 983 559 a Fp(Stanley-Reisner)45 b(Rings)e(\(10/24/02\))1521
849 y Fo(Sp)s(eak)m(er:)i(Vic)32 b(Reiner)-55 1156 y
Fn(k)s Fm(\(\001\))c(asso)r(ciated)e(a)h(simplicial)h(complex)f(\001)h
(on)f(v)n(ertex)g(set)g Fn(V)47 b Fm(=)22 b Fn(k)s Fm([)p
Fn(x)2202 1168 y Fl(v)2288 1156 y Fm(:)47 b Fn(v)26 b
Fk(2)d Fn(V)c Fm(])p Fn(=I)2670 1168 y Fj(\001)2729 1156
y Fm(,)28 b(where)1192 1321 y Fn(I)1228 1333 y Fj(\001)1311
1321 y Fm(=)22 b Fk(f)p Fn(x)1487 1333 y Fl(v)1520 1341
y Fi(1)1557 1321 y Fn(;)14 b(:)g(:)g(:)g(;)g(x)1789 1333
y Fl(v)1822 1341 y Fh(r)1906 1321 y Fm(:)46 b Fk(f)p
Fn(v)2057 1333 y Fj(1)2094 1321 y Fn(;)14 b(:)g(:)g(:)g(;)g(v)2319
1333 y Fl(r)2356 1321 y Fk(g)22 b(62)i Fm(\001)p Fk(g)1311
1445 y Fm(=)e(arbitrary)k(square-free)g(monimial)h(ideal)-180
1675 y Fg(Motiv)-6 b(ation)36 b(\(i\))-180 1828 y Fm(Arbitrary)22
b(graded)g(rings)g(deform)h(to)g Fn(k)s Fm([\001]'s,)h(lea)n(ving)e
(man)n(y)g(prop)r(erties)g(\(Kn)n(ull)h(dimension,)h(Hilb)r(ert)g
(series,)f(degree)f(of)h(pro)5 b(jection)-180 1928 y(em)n(b)r(edding\))
28 b(unc)n(hanged;)f(and)g(ha)n(ving)g(man)n(y)g(homological)e(in)n(v)
-5 b(arian)n(ts)27 b(only)g(increasing.)-180 2157 y Fg(Motiv)-6
b(ation)36 b(\(ii\))-180 2310 y Fm(F)-7 b(or)30 b Fn(k)s
Fm([)p Fn(d)p Fm(],)h(almost)e(an)n(y)h(\(ring-theoretic\))f
(homological)f(in)n(v)-5 b(arian)n(t)29 b(\(e.g.,)i Fn(T)12
b(or)2336 2280 y Fl(s)2371 2310 y Fm(\()p Fn(k)s Fm([\001])p
Fn(;)i Fm(\),)32 b Fn(H)2757 2322 y Fl(m)2820 2310 y
Fm(\()p Fn(k)s Fm([\001]\))f(lo)r(cal)e(cohomology\))g(are)g(com-)-180
2410 y(puted)f(via)f(simplicial)h(\(co-\))f(homology)f(of)h(\001.)37
b(E.g.,)27 b(dep)r(endence)h(on)g(the)g(c)n(haracteristic)d(of)j(the)g
(\014eld)f Fn(k)k Fm(can)c(b)r(e)h(subtle)g(for)f(these)-180
2509 y(ring)g(in)n(v)-5 b(arian)n(ts,)26 b(but)i(comes)f(do)n(wn)g(to)h
(torsion)e(for)h Fn(H)7 b Fm(\(\001)p Fn(;)14 b(k)s Fm(\).)657
2665 y Ff(\017)432 2795 y(\017)447 2779 y Fe(q)479 2761
y(q)510 2743 y(q)542 2725 y(q)573 2707 y(q)605 2688 y(q)636
2670 y(q)432 3055 y Ff(\017)p 446 3040 4 260 v 657 3185
a(\017)636 3149 y Fe(M)605 3131 y(M)573 3112 y(M)542
3094 y(M)510 3076 y(M)479 3058 y(M)447 3040 y(M)883 3055
y Ff(\017)861 3061 y Fe(q)830 3079 y(q)798 3097 y(q)767
3115 y(q)735 3133 y(q)704 3151 y(q)672 3170 y(q)883 2795
y Ff(\017)p 896 3040 V 672 2650 a Fe(M)704 2669 y(M)735
2687 y(M)767 2705 y(M)798 2723 y(M)830 2741 y(M)861 2760
y(M)657 2665 y Ff(\017)432 3055 y(\017)447 3040 y Fe(\015)468
3004 y(\015)488 2969 y(\015)509 2934 y(\015)529 2898
y(\015)549 2863 y(\015)570 2828 y(\015)590 2792 y(\015)611
2757 y(\015)631 2721 y(\015)652 2686 y(\015)883 3055
y Ff(\017)p 447 3041 451 4 v 672 2650 a Fe(1)693 2685
y(1)713 2721 y(1)734 2756 y(1)754 2791 y(1)775 2827 y(1)795
2862 y(1)815 2897 y(1)836 2933 y(1)856 2968 y(1)877 3004
y(1)770 2860 y Ff(\017)-259 b(\017)p 560 2846 226 4 v
657 3055 a(\017)652 3004 y Fe(1)634 2972 y(1)615 2940
y(1)597 2908 y(1)579 2877 y(1)560 2845 y(1)765 2881 y(\015)746
2913 y(\015)728 2944 y(\015)710 2976 y(\015)691 3008
y(\015)673 3040 y(\015)652 2625 y Fm(1)381 2755 y(3)524
2824 y Fe(M)498 2809 y(M)473 2795 y(M)447 2780 y(M)381
3066 y Fm(2)652 3248 y(1)p 671 3170 4 130 v 922 3066
a(3)922 2755 y(2)785 2844 y Fe(q)810 2830 y(q)836 2815
y(q)861 2800 y(q)719 2820 y Fm(4)-176 b(6)697 3118 y(5)984
2728 y Fd(\016)p Fc(\016)p 879 2626 4 4 v 880 2626 V
882 2625 V 884 2625 V 885 2625 V 889 2625 V 892 2625
V 895 2625 V 898 2625 V 901 2626 V 904 2626 V 907 2626
V 910 2626 V 913 2627 V 916 2627 V 919 2628 V 921 2628
V 924 2629 V 927 2630 V 929 2630 V 932 2631 V 934 2632
V 936 2633 V 939 2634 V 941 2635 V 943 2636 V 945 2637
V 947 2638 V 949 2640 V 951 2641 V 953 2642 V 955 2644
V 957 2645 V 958 2647 V 960 2648 V 962 2650 V 963 2652
V 965 2653 V 966 2655 V 967 2657 V 969 2659 V 970 2661
V 971 2663 V 972 2665 V 973 2667 V 974 2670 V 975 2672
V 976 2674 V 977 2677 V 978 2679 V 979 2682 V 979 2684
V 980 2687 V 980 2689 V 981 2692 V 981 2695 V 982 2698
V 982 2701 V 982 2704 V 983 2707 V 983 2710 V 983 2713
V 983 2716 V 983 2719 V 983 2723 V 983 2724 V 983 2726
V 983 2728 V 983 2730 V 361 3092 a Fd(N)p Fc(N)p 463
3197 V 461 3197 V 459 3197 V 458 3198 V 456 3198 V 453
3198 V 450 3198 V 446 3198 V 443 3197 V 440 3197 V 437
3197 V 434 3197 V 431 3196 V 428 3196 V 426 3196 V 423
3195 V 420 3195 V 417 3194 V 415 3193 V 412 3193 V 410
3192 V 408 3191 V 405 3190 V 403 3189 V 401 3188 V 399
3187 V 396 3186 V 394 3185 V 392 3183 V 390 3182 V 389
3181 V 387 3179 V 385 3178 V 383 3176 V 382 3175 V 380
3173 V 378 3171 V 377 3170 V 376 3168 V 374 3166 V 373
3164 V 372 3162 V 370 3160 V 369 3158 V 368 3156 V 367
3153 V 366 3151 V 365 3149 V 364 3146 V 364 3144 V 363
3141 V 362 3139 V 362 3136 V 361 3133 V 361 3131 V 360
3128 V 360 3125 V 359 3122 V 359 3119 V 359 3116 V 359
3113 V 359 3110 V 359 3107 V 359 3103 V 359 3100 V 359
3098 V 359 3097 V 359 3095 V 359 3093 V 178 2808 a Fm(\001)24
b(=)1250 2790 y(=)f(I)-14 b(R)p Fn(P)1480 2760 y Fj(2)1545
2790 y Fm(has)27 b Fn(k)s Fm([\001])c(=)f Fn(k)s Fm([)p
Fn(x)2080 2802 y Fj(1)2118 2790 y Fn(;)14 b(x)2202 2802
y Fj(2)2240 2790 y Fn(;)g(:)g(:)g(:)f(;)h(x)2471 2802
y Fj(6)2509 2790 y Fm(])p Fn(=)p Fm(\()p Fn(x)2653 2802
y Fj(1)2690 2790 y Fn(x)2737 2802 y Fj(2)2775 2790 y
Fn(x)2822 2802 y Fj(3)2860 2790 y Fn(;)g(x)2944 2802
y Fj(1)2981 2790 y Fn(x)3028 2802 y Fj(2)3066 2790 y
Fn(x)3113 2802 y Fj(6)3151 2790 y Fn(;)g(:)g(:)g(:)p
Fm(\))1250 2890 y(with)28 b(most)g(of)f(its)h(homological)e(in)n(v)-5
b(arian)n(ts)1250 2989 y(dep)r(ending)28 b(up)r(on)g(whether)g(c)n
(har\()p Fn(k)s Fm(\))22 b(=)g(2)28 b(or)e(not,)i(since)1233
3593 y(~)1212 3614 y Fn(H)1281 3626 y Fl(i)1308 3614
y Fm(\(\001;)14 b Fn(k)s Fm(\))84 b(=)1695 3369 y Fb(8)1695
3444 y(>)1695 3469 y(>)1695 3494 y(>)1695 3519 y(<)1695
3668 y(>)1695 3693 y(>)1695 3718 y(>)1695 3743 y(:)1769
3438 y Fm(0)j Fn(i)23 b(>)f Fm(2)1769 3558 y Fn(k)86
b(i)23 b Fm(=)f(2)1769 3677 y Fn(k)86 b(i)23 b Fm(=)f(1)1769
3797 y(0)87 b Fn(i)23 b Fm(=)f(0)2172 3614 y(if)28 b(c)n(har\()p
Fn(k)s Fm(\))22 b(=)h(2)1610 3928 y(=)g(0)82 b Fk(8)p
Fn(i;)251 b Fm(if)28 b(c)n(har\()p Fn(k)s Fm(\))22 b
Fk(6)p Fm(=)h(2)o Fn(:)-180 4157 y Fg(Motiv)-6 b(ation)36
b(\(iii\))-180 4310 y Fm(F)-7 b(or)32 b(some)h(com)n(binatorial)e
(problems)h(ab)r(out)h(simplicial)g(complexes)g(\001,)h(the)g(approac)n
(h)d(via)h Fn(k)s Fm([\001])i(is)f(the)g(easy)f(w)n(a)n(y)g(or)g(the)h
(only)p 3925 4340 155 4 v -180 4410 a(w)n(a)n(y)-7 b(.)36
b(E.g.,)27 b(The)g(upp)r(er)h(b)r(ound)g(conjecture)f(\(UBC\))h(for)g
(simplicial)f(p)r(olytop)r(es)g(and)h(spheres)f(\(Motzkin)g(1957?\))
-180 4510 y(CONJ:)g(\001)h(a)f(simplicial)h(\()p Fn(d)19
b Fk(\000)f Fm(1\)-dimensional)26 b(sphere)h(\(e.g.,)h(b)r(oundary)f
(of)g(a)g(simplicial)h(con)n(v)n(ex)e(p)r(olytop)r(e\))-180
5372 y @beginspecial 68 @llx 68 @lly 452 @urx 235 @ury
2300 @rwi @setspecial
%%BeginDocument: polytopes.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: polytopes.eps
%%Creator: Xcircuit v3.0
%%CreationDate: Sat Oct 26 13:02:09 2002
%%Pages: 1
%%BoundingBox: 68 68 452 235
%%DocumentNeededResources: font Helvetica font Times-Roman 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 2.4
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--5/16/01  (tim@bach.ece.jhu.edu)
%  The Johns Hopkins University
%
%%BeginResource: procset XCIRCproc 2.4 1
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg /rotval exch def
	/just exch def just 16 and 0 gt {gsave rotval rotate 0 1 dtransform
	gsave pagemat setmatrix idtransform exch grestore 1 0 dtransform
	gsave pagemat setmatrix idtransform exch grestore dup abs 1e-9 lt
	{pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse grestore {-1 /rotval
	rotval neg def /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse
	exch -1e-9 lt {-1 /rotval rotval neg def /just just dup 12 and
	4 ne {12 xor} if def} {1} ifelse scale } if /showflag 0 def
	/fspc pspc def /Bline 0 def /Tabs 0 array def /fscale 1.0 def
	/kY 0 def gsave dup 1 add copy 0 exch 1 0 dtransform exch atan rotate
	{exch dup type /stringtype eq {true charpath flattenpath} {exec}
	ifelse } repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll just
	1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub 0.5
	mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch just 4
	and 0 gt {just 8 and 0 gt {exch pop neg fspc sub} {add 0.5 mul neg}
	ifelse} {pop neg fspc add} ifelse rotval rotate Kn currentpoint
	translate /showflag 1 def /Bline 0 def /Tabs 0 array def /fscale
	1.0 def /kY 0 def {dup type /stringtype eq {show}{exec} ifelse}
	repeat grestore } def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate { /hlevel hlevel 1 add def /defColor currentcolor sce 3 array
	astore def gsave sce translate 0 0 moveto neg rotate dup abs scale
	} bind def
/makeparm  {3 string cvs dup length 1 add string /tstr exch def tstr exch
	1 exch putinterval tstr 0 (v) putinterval tstr cvn} bind def
/beginparm { -1 1 {makeparm exch def} for
	dup type /arraytype eq { aload length -1 1 {makeparm exch def}
	for } if begingate } bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb} bind def

/hlevel 0 def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def
  style 1 and 0 gt not {closepath} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if 
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if 
  style dup 256 ge exch 480 lt and { gsave 1 setgray eofill grestore } if
  style 16 and 0 gt { gsave style 224 and -5 bitshift dup 7 lt
	{gar exch get ppaint} { pop eofill } ifelse grestore } if
  style 8 and 0 gt style 512 eq or { newpath } { stroke } ifelse grestore } def

/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef } def
/psinsertion {/PSobj save def /showpage {} def bop rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

/dot {
% trivial
begingate
248 1.00 0 0 6 0.00 360.00 xcarc
1.000 0.000 0.000 scb
(x) {/Times-Roman cf} 2 29 0 1.00 0 0 pinlabel
endgate
} def

/arrowhead {
% trivial
begingate
0.000 0.000 0.000 scb
8 -28 beginpath
3 -18 3 -15 0 0 curveto
-3 -15 -3 -18 -8 -28 curveto
-2 -26 2 -26 8 -28 curveto
249 1.00 endpath
endgate
} def

%%Page: 1 1
%%PageOrientation: Portrait
/pgsave save def bop
% 742 406 offsets
1.0000 inchscale
2.6000 setlinewidth

1.00 0 454 470 dot
1.00 0 358 502 dot
1.00 0 262 470 dot
1.00 0 326 438 dot
1.00 0 326 310 dot
1.00 0 422 278 dot
1.00 0 518 342 dot
1.00 0 198 374 dot
1 1.00 358 502 262 470 326 438 454 470 358 502 5 polygon
1 1.00 454 470 518 342 422 278 326 310 326 438 5 polygon
1 1.00 262 470 198 374 326 310 3 polygon
(. . .) {/Helvetica cf} 2 16 15 1.00 262 278 label
1.00 289 416 482 arrowhead
-1.00 257 386 453 arrowhead
-1.00 155 473 432 arrowhead
1.00 0 1094 566 dot
1.00 0 998 470 dot
1.00 0 1190 470 dot
1.00 0 1062 438 dot
1.00 0 1094 278 dot
1 1.00 998 470 1094 566 1062 438 998 470 1094 278 1062 438 1190 470 1094 278 
8 polygon
1 1.00 1094 566 1190 470 2 polygon
5 1.00 998 470 1190 470 2 polygon
1 1.00 710 470 774 470 870 406 614 406 spline
1.00 123 870 406 arrowhead
-1.00 236 614 406 arrowhead
(polar dual) {/Helvetica cf} 2 16 0 1.00 646 470 label
1 1.00 614 486 614 534 2 polygon
1.00 0 614 534 arrowhead
(same coordinatorial information) {/Helvetica cf} 2 16 0 0.70 582 550 label
( polytope) {CR} (simplicial) {/Helvetica cf} 4 16 0 1.00 1014 198 label
(polytopes) {CR} (simple) {/Helvetica cf} 4 16 0 1.00 246 550 label
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF

%%EndDocument
 @endspecial 1968 4899 a Fk(\))111 b Fn(f)2203 4911 y
Fl(i)2230 4899 y Fm(\(\001\))2162 4954 y Fb(|)p 2199
4954 27 10 v 27 w({z)p 2300 4954 V 27 w(})1994 5051 y
Fm(#)28 b(i-dim'l)g(simplicies)2387 4899 y Fk(\024)23
b Fn(f)2516 4911 y Fl(i)2543 4899 y Fm(\(\001)2644 4914
y Fl(c)p Fj(\()p Fl(n;d)p Fj(\))2826 4899 y Fm(\))1929
5580 y(1)p eop
%%Page: 2 2
2 1 bop -55 210 a Fm(where)343 393 y(\001)412 408 y Fl(c)p
Fj(\()p Fl(n;d)p Fj(\))616 393 y Fm(=)23 b(b)r(oundary)j(of)i(the)g
(cyclic)f Fn(d)p Fm(-p)r(olytop)r(e)h Fn(C)6 b Fm(\()p
Fn(n;)14 b(d)p Fm(\))28 b(with)g Fn(n)g Fm(v)n(ertices)616
533 y(=)23 b(con)n(v)n(ex)j(h)n(ull)i(of)f(an)n(y)g Fn(n)g
Fm(p)r(oin)n(ts)h(on)f(the)h(momen)n(t)g(curv)n(e)e Fk(f)p
Fm(\()p Fn(t;)14 b(t)2689 498 y Fj(2)2726 533 y Fn(;)g(:)g(:)g(:)g(;)g
(t)2941 498 y Fl(d)2979 533 y Fm(\))24 b(:)f Fn(t)g Fk(2)g
Fm(I)-14 b(R)p Fk(g)23 b(\032)g Fm(I)-14 b(R)3519 496
y Fl(d)-55 715 y Fm(e.g.)36 b Fn(n)23 b Fm(=)f(6)885
2297 y @beginspecial 68 @llx 68 @lly 470 @urx 362 @ury
2556 @rwi @setspecial
%%BeginDocument: C6.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: C6.eps
%%Creator: Xcircuit v3.0
%%CreationDate: Sat Oct 26 12:49:24 2002
%%Pages: 1
%%BoundingBox: 68 68 470 362
%%DocumentNeededResources: font Helvetica font Times-Roman font Symbol 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 2.4
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--5/16/01  (tim@bach.ece.jhu.edu)
%  The Johns Hopkins University
%
%%BeginResource: procset XCIRCproc 2.4 1
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg /rotval exch def
	/just exch def just 16 and 0 gt {gsave rotval rotate 0 1 dtransform
	gsave pagemat setmatrix idtransform exch grestore 1 0 dtransform
	gsave pagemat setmatrix idtransform exch grestore dup abs 1e-9 lt
	{pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse grestore {-1 /rotval
	rotval neg def /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse
	exch -1e-9 lt {-1 /rotval rotval neg def /just just dup 12 and
	4 ne {12 xor} if def} {1} ifelse scale } if /showflag 0 def
	/fspc pspc def /Bline 0 def /Tabs 0 array def /fscale 1.0 def
	/kY 0 def gsave dup 1 add copy 0 exch 1 0 dtransform exch atan rotate
	{exch dup type /stringtype eq {true charpath flattenpath} {exec}
	ifelse } repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll just
	1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub 0.5
	mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch just 4
	and 0 gt {just 8 and 0 gt {exch pop neg fspc sub} {add 0.5 mul neg}
	ifelse} {pop neg fspc add} ifelse rotval rotate Kn currentpoint
	translate /showflag 1 def /Bline 0 def /Tabs 0 array def /fscale
	1.0 def /kY 0 def {dup type /stringtype eq {show}{exec} ifelse}
	repeat grestore } def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate { /hlevel hlevel 1 add def /defColor currentcolor sce 3 array
	astore def gsave sce translate 0 0 moveto neg rotate dup abs scale
	} bind def
/makeparm  {3 string cvs dup length 1 add string /tstr exch def tstr exch
	1 exch putinterval tstr 0 (v) putinterval tstr cvn} bind def
/beginparm { -1 1 {makeparm exch def} for
	dup type /arraytype eq { aload length -1 1 {makeparm exch def}
	for } if begingate } bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb} bind def

/hlevel 0 def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def
  style 1 and 0 gt not {closepath} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if 
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if 
  style dup 256 ge exch 480 lt and { gsave 1 setgray eofill grestore } if
  style 16 and 0 gt { gsave style 224 and -5 bitshift dup 7 lt
	{gar exch get ppaint} { pop eofill } ifelse grestore } if
  style 8 and 0 gt style 512 eq or { newpath } { stroke } ifelse grestore } def

/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef } def
/psinsertion {/PSobj save def /showpage {} def bop rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

/dot {
% trivial
begingate
248 1.00 0 0 6 0.00 360.00 xcarc
1.000 0.000 0.000 scb
(x) {/Times-Roman cf} 2 29 0 1.00 0 0 pinlabel
endgate
} def

/arrowhead {
% trivial
begingate
0.000 0.000 0.000 scb
8 -28 beginpath
3 -18 3 -15 0 0 curveto
-3 -15 -3 -18 -8 -28 curveto
-2 -26 2 -26 8 -28 curveto
249 1.00 endpath
endgate
} def

%%Page: 1 1
%%PageOrientation: Portrait
/pgsave save def bop
% 704 720 offsets
1.0000 inchscale
2.6000 setlinewidth

1 1.00 352 944 864 944 2 polygon
1.00 0 384 816 dot
1.00 0 768 816 dot
1.00 0 736 688 dot
1.00 0 640 592 dot
1.00 0 512 592 dot
1.00 0 416 688 dot
1 1.00 384 816 768 816 736 688 640 592 512 592 416 688 384 816 7 polygon
1 0.50 448 688 480 784 2 polygon
1 0.50 464 656 512 800 2 polygon
1 0.50 496 640 544 784 2 polygon
1 0.50 528 640 576 784 2 polygon
1 0.50 560 624 608 768 2 polygon
1 0.50 592 624 640 768 2 polygon
1 0.50 624 624 672 768 2 polygon
1 0.50 656 624 704 768 2 polygon
(1) {/Helvetica cf} 2 16 0 1.00 352 816 label
(2) {/Helvetica cf} 2 16 0 1.00 384 672 label
(3) {/Helvetica cf} 2 16 0 1.00 496 560 label
(4) {/Helvetica cf} 2 16 0 1.00 640 560 label
(5) {/Helvetica cf} 2 16 0 1.00 752 656 label
(6) {/Helvetica cf} 2 16 0 1.00 784 800 label
1.00 0 384 944 dot
1.00 0 448 944 dot
1.00 0 512 944 dot
1.00 0 576 944 dot
1.00 0 640 944 dot
1.00 0 704 944 dot
1.00 92 864 944 arrowhead
1.00 0 384 448 dot
1.00 0 768 448 dot
1.00 0 736 320 dot
1.00 0 640 224 dot
1.00 0 512 224 dot
1.00 0 416 320 dot
1 1.00 384 448 768 448 736 320 640 224 512 224 416 320 384 448 7 polygon
(1) {/Helvetica cf} 2 16 0 1.00 352 448 label
(2) {/Helvetica cf} 2 16 0 1.00 384 304 label
(3) {/Helvetica cf} 2 16 0 1.00 496 192 label
(4) {/Helvetica cf} 2 16 0 1.00 640 192 label
(5) {/Helvetica cf} 2 16 0 1.00 752 288 label
(6) {/Helvetica cf} 2 16 0 1.00 784 432 label
1 1.00 736 320 384 448 640 224 3 polygon
1 1.00 384 448 512 224 2 polygon
5 1.00 512 224 768 448 416 320 3 polygon
5 1.00 640 224 768 448 2 polygon
(1) {Ss} (R) {-4 0 Kn} (I) {/Helvetica cf} 6 16 0 1.00 864 896 label
(2) {Ss} (R) {-4 0 Kn} (I) {/Helvetica cf} 6 16 0 1.00 848 688 label
(3) {Ss} (R) {-4 0 Kn} (I) {/Helvetica cf} 6 16 0 1.00 816 336 label
(C\(6, 1\)) {/Helvetica cf} 2 16 0 1.00 192 928 label
(C\(6, 2\)) {/Helvetica cf} 2 16 0 1.00 192 720 label
(C\(6, 3\)) {/Helvetica cf} 2 16 0 1.00 192 352 label
(R}) {-3 0 Kn} (I) {/Helvetica cf} ( \316 ) {/Symbol cf} ({\(t\): t) 
{/Helvetica cf} 8 16 0 1.00 960 896 label
(R}) {-3 0 Kn} (I) {/Helvetica cf} ( \316 ) {/Symbol cf} (\): t) {ns} (2) {Ss} 
({\(t, t) {/Helvetica cf} 12 16 0 1.00 944 672 label
(R}) {-3 0 Kn} (I) {/Helvetica cf} ( \316 ) {/Symbol cf} (\): t) {ns} (3) {Ss} 
(, t) {ns} (2) {Ss} ({\(t, t) {/Helvetica cf} 16 16 0 1.00 928 272 label
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF

%%EndDocument
 @endspecial -55 2397 a(UBC)27 b(is)g(pro)n(v)n(en)f(for)h(con)n(v)n
(ex)f(p)r(olytop)r(es)h(b)n(y)h(P)n(eter)e(Mcm)n(ullen)i(in)f(1970)f
(\(?\))38 b(using)27 b(k)n(ey)f(observ)-5 b(ations)26
b(ab)r(out)i(the)f Fn(n)p Fm(-v)n(ectors)f(...)885 3427
y @beginspecial 68 @llx 68 @lly 470 @urx 242 @ury 2556
@rwi @setspecial
%%BeginDocument: C53.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: C53.eps
%%Creator: Xcircuit v3.0
%%CreationDate: Tue Oct 29 15:51:46 2002
%%Pages: 1
%%BoundingBox: 68 68 470 242
%%DocumentNeededResources: font Helvetica font Times-Roman font Symbol 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 2.4
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--5/16/01  (tim@bach.ece.jhu.edu)
%  The Johns Hopkins University
%
%%BeginResource: procset XCIRCproc 2.4 1
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg /rotval exch def
	/just exch def just 16 and 0 gt {gsave rotval rotate 0 1 dtransform
	gsave pagemat setmatrix idtransform exch grestore 1 0 dtransform
	gsave pagemat setmatrix idtransform exch grestore dup abs 1e-9 lt
	{pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse grestore {-1 /rotval
	rotval neg def /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse
	exch -1e-9 lt {-1 /rotval rotval neg def /just just dup 12 and
	4 ne {12 xor} if def} {1} ifelse scale } if /showflag 0 def
	/fspc pspc def /Bline 0 def /Tabs 0 array def /fscale 1.0 def
	/kY 0 def gsave dup 1 add copy 0 exch 1 0 dtransform exch atan rotate
	{exch dup type /stringtype eq {true charpath flattenpath} {exec}
	ifelse } repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll just
	1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub 0.5
	mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch just 4
	and 0 gt {just 8 and 0 gt {exch pop neg fspc sub} {add 0.5 mul neg}
	ifelse} {pop neg fspc add} ifelse rotval rotate Kn currentpoint
	translate /showflag 1 def /Bline 0 def /Tabs 0 array def /fscale
	1.0 def /kY 0 def {dup type /stringtype eq {show}{exec} ifelse}
	repeat grestore } def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate { /hlevel hlevel 1 add def /defColor currentcolor sce 3 array
	astore def gsave sce translate 0 0 moveto neg rotate dup abs scale
	} bind def
/makeparm  {3 string cvs dup length 1 add string /tstr exch def tstr exch
	1 exch putinterval tstr 0 (v) putinterval tstr cvn} bind def
/beginparm { -1 1 {makeparm exch def} for
	dup type /arraytype eq { aload length -1 1 {makeparm exch def}
	for } if begingate } bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb} bind def

/hlevel 0 def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def
  style 1 and 0 gt not {closepath} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if 
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if 
  style dup 256 ge exch 480 lt and { gsave 1 setgray eofill grestore } if
  style 16 and 0 gt { gsave style 224 and -5 bitshift dup 7 lt
	{gar exch get ppaint} { pop eofill } ifelse grestore } if
  style 8 and 0 gt style 512 eq or { newpath } { stroke } ifelse grestore } def

/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef } def
/psinsertion {/PSobj save def /showpage {} def bop rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

/dot {
% trivial
begingate
248 1.00 0 0 6 0.00 360.00 xcarc
1.000 0.000 0.000 scb
(x) {/Times-Roman cf} 2 29 0 1.00 0 0 pinlabel
endgate
} def

%%Page: 1 1
%%PageOrientation: Portrait
/pgsave save def bop
% 1120 384 offsets
% 32.00 32.00 gridspace
1.0000 inchscale
2.6000 setlinewidth

1.00 0 800 448 dot
1.00 0 1056 448 dot
1.00 0 800 320 dot
1.00 0 928 256 dot
1.00 0 1056 320 dot
1 1.00 800 448 1056 448 1056 320 928 256 800 320 800 448 6 polygon
1 1.00 800 448 1056 320 2 polygon
1 1.00 928 256 800 448 2 polygon
5 1.00 800 320 1056 448 2 polygon
5 1.00 928 256 1056 448 2 polygon
(1) {/Helvetica cf} 2 16 0 1.00 768 448 label
(2) {/Helvetica cf} 2 16 0 1.00 768 288 label
(3) {/Helvetica cf} 2 16 0 1.00 928 224 label
(4) {/Helvetica cf} 2 16 0 1.00 1056 288 label
(5) {/Helvetica cf} 2 16 0 1.00 1088 448 label
(D) {/Symbol cf} (= ) {/Helvetica cf} 4 16 0 1.00 1184 352 label
1.00 0 352 544 dot
1.00 0 224 416 dot
1.00 0 288 384 dot
1.00 0 480 416 dot
1.00 0 352 224 dot
1 1.00 224 416 288 384 480 416 352 224 288 384 352 544 224 416 352 224 
8 polygon
1 1.00 352 544 480 416 2 polygon
5 1.00 224 416 480 416 2 polygon
(2) {/Helvetica cf} 2 16 0 1.00 352 544 label
(1) {/Helvetica cf} 2 16 0 1.00 192 384 label
(4) {/Helvetica cf} 2 16 0 1.00 352 192 label
(5) {/Helvetica cf} 2 16 0 1.00 480 416 label
(3) {/Helvetica cf} 2 16 0 1.00 304 352 label
(d=3) {/Helvetica cf} (C\(5, 3\)   ) {/Helvetica cf} 4 16 0 1.00 576 608 label
(@) {/Symbol cf} 2 16 0 2.00 640 352 label
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF

%%EndDocument
 @endspecial 1363 3709 a Fn(f)9 b Fm(\(\001\)\()p Fn(f)1619
3721 y Ff(\000)p Fj(1)1708 3709 y Fn(;)14 b(f)1786 3721
y Fj(0)1823 3709 y Fn(;)g(f)1901 3721 y Fj(1)1938 3709
y Fn(;)g(f)2016 3721 y Fj(2)2053 3709 y Fm(\))23 b(=)g(\(1)p
Fn(;)14 b Fm(5)p Fn(;)g Fm(9)p Fn(;)g Fm(6\))1365 3834
y Fn(h)p Fm(\(\001\)\()p Fn(h)1626 3846 y Fj(0)1664 3834
y Fn(;)g(h)1749 3846 y Fj(1)1786 3834 y Fn(;)g(h)1871
3846 y Fj(2)1908 3834 y Fn(;)g(h)1993 3846 y Fj(3)2030
3834 y Fm(\))23 b(=)g(\(1)p Fn(;)14 b Fm(2)p Fn(;)g Fm(2)p
Fn(;)g Fm(1\))1986 4025 y(1)1845 4124 y(1)240 b(5)1704
4224 y(1)g(4)270 b(9)1563 4323 y(1)240 b(3)g(5)300 b(6)p
1339 4357 1222 4 v 1389 4426 a(\(1)241 b(2)f(2)g(1)27
b(\)=)c Fn(h)p Fm(\(\001\))1929 5580 y(2)p eop
%%Page: 3 3
3 2 bop -55 210 a Fm(So)827 439 y(Hilb)q(\()p Fn(k)s
Fm([\001])p Fn(;)14 b(t)p Fm(\))23 b(=)g Fn(f)1426 451
y Ff(\000)p Fj(1)1533 439 y Fm(+)18 b Fn(f)1657 451 y
Fj(0)1694 322 y Fb(\022)1837 383 y Fn(t)p 1765 420 173
4 v 1765 496 a Fm(1)g Fk(\000)g Fn(t)1948 322 y Fb(\023)2028
439 y Fm(+)g Fn(f)2152 451 y Fj(1)2189 322 y Fb(\022)2331
383 y Fn(t)p 2260 420 V 2260 496 a Fm(1)g Fk(\000)g Fn(t)2443
322 y Fb(\023)2504 339 y Fj(2)2559 439 y Fm(+)h Fn(f)2684
451 y Fj(2)2720 322 y Fb(\022)2863 383 y Fn(t)p 2791
420 V 2791 496 a Fm(1)f Fk(\000)g Fn(t)2974 322 y Fb(\023)3036
339 y Fj(3)1297 688 y Fm(=)23 b(1)18 b(+)g(5)1570 571
y Fb(\022)1712 632 y Fn(t)p 1641 669 V 1641 745 a Fm(1)g
Fk(\000)g Fn(t)1824 571 y Fb(\023)1903 688 y Fm(+)g(9)2028
571 y Fb(\022)2170 632 y Fn(t)p 2099 669 V 2099 745 a
Fm(1)g Fk(\000)g Fn(t)2282 571 y Fb(\023)2343 588 y Fj(2)2398
688 y Fm(+)g(6)2523 571 y Fb(\022)2666 632 y Fn(t)p 2594
669 V 2594 745 a Fm(1)g Fk(\000)g Fn(t)2777 571 y Fb(\023)2838
588 y Fj(3)1297 924 y Fm(=)1395 868 y Fn(h)1443 880 y
Fj(0)1499 868 y Fm(+)g Fn(h)1630 880 y Fj(1)1667 868
y Fn(t)g Fm(+)g Fn(h)1846 880 y Fj(2)1883 868 y Fn(t)1913
838 y Fj(2)1969 868 y Fm(+)g Fn(f)2093 880 y Fj(3)2130
868 y Fn(t)2160 838 y Fj(3)p 1395 905 802 4 v 1659 981
a Fm(\(1)g Fk(\000)g Fn(t)p Fm(\))1896 957 y Fj(3)1297
1159 y Fm(=)1395 1103 y(1)g(+)g(2)p Fn(t)g Fm(+)g(2)p
Fn(t)1783 1072 y Fj(2)1838 1103 y Fm(+)g Fn(t)1951 1072
y Fj(3)p 1395 1140 594 4 v 1554 1216 a Fm(\(1)h Fk(\000)f
Fn(t)p Fm(\))1792 1192 y Fj(3)-180 1430 y Fg(McMullen's)37
b(observ)-6 b(ation)37 b(1)-180 1583 y Fm(UBC)28 b(follo)n(ws)e(from)
1495 1712 y Fn(h)1543 1724 y Fl(i)1571 1712 y Fm(\(\001\))d
Fk(\024)1815 1595 y Fb(\022)1876 1656 y Fn(n)18 b Fk(\000)g
Fn(d)h Fm(+)f Fn(i)g Fk(\000)g Fm(1)2096 1769 y Fn(i)2344
1595 y Fb(\023)-180 1907 y Fm(where)27 b Fn(n)c Fm(=)g
Fn(f)262 1919 y Fj(0)322 1907 y Fm(=)k(#)h(of)f(v)n(ertices.)-55
2006 y(\(follo)n(ws)f(from)i(explicit)g(kno)n(wledge)e(of)h
Fn(f)1275 2018 y Fl(i)1330 2006 y Fm(for)g(b)r(oundary)g(of)h
Fn(C)6 b Fm(\()p Fn(n;)14 b(d)p Fm(\))28 b(and)g(a)f(little)h(m)n(uc)n
(king)f(around...)36 b(\))-180 2239 y Fg(McMullen's)h(observ)-6
b(ation)37 b(2)-180 2421 y Fn(h)-132 2433 y Fl(i)-105
2421 y Fm(\(\001\))24 b Fk(\024)140 2304 y Fb(\022)201
2365 y Fn(n)18 b Fk(\000)g Fn(d)h Fm(+)f Fn(i)g Fk(\000)g
Fm(1)421 2478 y Fn(i)669 2304 y Fb(\023)757 2421 y Fm(is)27
b(easy)f(to)i(pro)n(v)n(e)d(b)n(y)i(induction)h(on)f
Fn(f)1987 2433 y Fl(d)p Ff(\000)p Fj(1)2133 2421 y Fm(=)g(#)g(of)h
Fa(fac)l(ets)34 b Fm(\(=maximal)27 b(faces\))g(for)f(\001)i(whic)n(h)f
(are)f(pure)-180 2570 y(shellable)h(simplicial)h(complies)f(\(of)h
(dimension)f Fn(d)19 b Fk(\000)f Fm(1)27 b(with)h Fn(n)g
Fm(v)n(ertices\))-55 2670 y(\001)f(is)h Fa(shel)t(lable)36
b Fm(if)28 b(it)g(can)f(b)r(e)h(built)h(up)f(b)n(y)f(ordering)f(facets)
h Fn(F)1932 2682 y Fj(1)1970 2670 y Fn(;)14 b(F)2060
2682 y Fj(2)2097 2670 y Fn(;)g(:)g(:)g(:)28 b Fm(so)f(that)h
Fk(8)p Fn(i)21 b Fk(\025)i Fm(2,)1698 2853 y Fn(F)1751
2865 y Fl(i)1798 2853 y Fk(\\)1872 2785 y Fb(\000)p 1910
2786 255 4 v 68 x Fk([)1965 2865 y Fl(j)s(<i)2075 2853
y Fn(F)2128 2865 y Fl(j)2164 2785 y Fb(\001)1872 2917
y(|)p 1909 2917 91 10 v 91 w({z)p 2074 2917 V 91 w(})1521
3013 y Fm(sub)k(complex)g(gen'd)h(b)n(y)f Fn(F)2388 3025
y Fj(1)2426 3013 y Fn(;)14 b(F)2516 3025 y Fj(2)2553
3013 y Fn(;)g(:)g(:)g(:)g(;)g(F)2791 3025 y Fl(i)p Ff(\000)p
Fj(1)-180 3190 y Fm(is)27 b(pure)h(of)f(co)r(dimension)h(inside)f
Fn(F)949 3202 y Fl(i)-55 3289 y Fm(When)h Fn(d)23 b Fm(=)g(3,)k
Fn(d)18 b Fk(\000)h Fm(1)j(=)h(2,)-180 3922 y @beginspecial
68 @llx 68 @lly 236 @urx 188 @ury 1022 @rwi @setspecial
%%BeginDocument: F1to6.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: F1to6.eps
%%Creator: Xcircuit v3.0
%%CreationDate: Sat Oct 26 12:53:07 2002
%%Pages: 1
%%BoundingBox: 68 68 236 188
%%DocumentNeededResources: font Helvetica font Times-Roman 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 2.4
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--5/16/01  (tim@bach.ece.jhu.edu)
%  The Johns Hopkins University
%
%%BeginResource: procset XCIRCproc 2.4 1
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg /rotval exch def
	/just exch def just 16 and 0 gt {gsave rotval rotate 0 1 dtransform
	gsave pagemat setmatrix idtransform exch grestore 1 0 dtransform
	gsave pagemat setmatrix idtransform exch grestore dup abs 1e-9 lt
	{pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse grestore {-1 /rotval
	rotval neg def /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse
	exch -1e-9 lt {-1 /rotval rotval neg def /just just dup 12 and
	4 ne {12 xor} if def} {1} ifelse scale } if /showflag 0 def
	/fspc pspc def /Bline 0 def /Tabs 0 array def /fscale 1.0 def
	/kY 0 def gsave dup 1 add copy 0 exch 1 0 dtransform exch atan rotate
	{exch dup type /stringtype eq {true charpath flattenpath} {exec}
	ifelse } repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll just
	1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub 0.5
	mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch just 4
	and 0 gt {just 8 and 0 gt {exch pop neg fspc sub} {add 0.5 mul neg}
	ifelse} {pop neg fspc add} ifelse rotval rotate Kn currentpoint
	translate /showflag 1 def /Bline 0 def /Tabs 0 array def /fscale
	1.0 def /kY 0 def {dup type /stringtype eq {show}{exec} ifelse}
	repeat grestore } def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate { /hlevel hlevel 1 add def /defColor currentcolor sce 3 array
	astore def gsave sce translate 0 0 moveto neg rotate dup abs scale
	} bind def
/makeparm  {3 string cvs dup length 1 add string /tstr exch def tstr exch
	1 exch putinterval tstr 0 (v) putinterval tstr cvn} bind def
/beginparm { -1 1 {makeparm exch def} for
	dup type /arraytype eq { aload length -1 1 {makeparm exch def}
	for } if begingate } bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb} bind def

/hlevel 0 def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def
  style 1 and 0 gt not {closepath} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if 
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if 
  style dup 256 ge exch 480 lt and { gsave 1 setgray eofill grestore } if
  style 16 and 0 gt { gsave style 224 and -5 bitshift dup 7 lt
	{gar exch get ppaint} { pop eofill } ifelse grestore } if
  style 8 and 0 gt style 512 eq or { newpath } { stroke } ifelse grestore } def

/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef } def
/psinsertion {/PSobj save def /showpage {} def bop rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

/dot {
% trivial
begingate
248 1.00 0 0 6 0.00 360.00 xcarc
1.000 0.000 0.000 scb
(x) {/Times-Roman cf} 2 29 0 1.00 0 0 pinlabel
endgate
} def

%%Page: 1 1
%%PageOrientation: Portrait
/pgsave save def bop
% 422 358 offsets
1.0000 inchscale
2.6000 setlinewidth

1.00 0 326 486 dot
1.00 0 198 358 dot
1.00 0 294 198 dot
1.00 0 326 326 dot
1.00 0 454 198 dot
1.00 0 454 358 dot
1.00 0 614 294 dot
1 1.00 326 486 198 358 294 198 454 198 454 358 326 486 326 326 198 358 
8 polygon
1 1.00 294 198 326 326 454 198 614 294 454 358 326 326 6 polygon
(1) {ss} (F) {/Helvetica cf} 4 16 0 1.00 262 390 label
(3) {ss} (F) {/Helvetica cf} 4 16 0 1.00 262 294 label
(4) {ss} (F) {/Helvetica cf} 4 16 0 1.00 326 230 label
(5) {ss} (F) {/Helvetica cf} 4 16 0 1.00 390 294 label
(2) {ss} (F) {/Helvetica cf} 4 16 0 1.00 342 374 label
(6) {ss} (F) {/Helvetica cf} 4 16 0 1.00 502 278 label
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF

%%EndDocument
 @endspecial 100 x(Brngesser)i(&)j(Mani)f(\(1969?\),)g(Boundary)f(of)h
(con)n(v)n(ex)g(p)r(olytop)r(es)g(are)g(shellable)g(\(this)h(pro)n(v)n
(es)e(UBC\))-180 4254 y Fg(McMullen's)37 b(observ)-6
b(ation)37 b(3)-180 4408 y Fm(F)-7 b(or)30 b(\001)h(shellable,)h
Fn(h)485 4420 y Fl(i)512 4408 y Fm(\(\001\))g(coun)n(ts)e(something:)43
b(it)31 b(is)g(equal)f(to)h(the)g(n)n(um)n(b)r(er)g(of)g(facets)f
Fn(F)2716 4420 y Fl(i)2775 4408 y Fm(is)h(shelling)f(ha)n(ving)g
Fn(d)21 b Fk(\000)f Fn(i)31 b Fm(new)g(w)n(alls,)f Fn(i)-180
4507 y Fm(old)d(w)n(alls,)g(where)g Fn(d)19 b Fk(\000)f
Fn(i)27 b Fm(new)h(w)n(alls)f(are)f(not)i(in)p 1388 4441
247 4 v 28 w Fk([)1443 4519 y Fl(j)s(<i)1553 4507 y Fn(F)1606
4519 y Fl(i)1634 4507 y Fm(.)-55 4616 y(e.g.,)-55 5199
y @beginspecial 68 @llx 68 @lly 223 @urx 181 @ury 920
@rwi @setspecial
%%BeginDocument: eg5nodes.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: eg5nodes.eps
%%Creator: Xcircuit v3.0
%%CreationDate: Sat Oct 26 12:55:47 2002
%%Pages: 1
%%BoundingBox: 68 68 223 181
%%DocumentNeededResources: font Helvetica font Times-Roman 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 2.4
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--5/16/01  (tim@bach.ece.jhu.edu)
%  The Johns Hopkins University
%
%%BeginResource: procset XCIRCproc 2.4 1
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg /rotval exch def
	/just exch def just 16 and 0 gt {gsave rotval rotate 0 1 dtransform
	gsave pagemat setmatrix idtransform exch grestore 1 0 dtransform
	gsave pagemat setmatrix idtransform exch grestore dup abs 1e-9 lt
	{pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse grestore {-1 /rotval
	rotval neg def /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse
	exch -1e-9 lt {-1 /rotval rotval neg def /just just dup 12 and
	4 ne {12 xor} if def} {1} ifelse scale } if /showflag 0 def
	/fspc pspc def /Bline 0 def /Tabs 0 array def /fscale 1.0 def
	/kY 0 def gsave dup 1 add copy 0 exch 1 0 dtransform exch atan rotate
	{exch dup type /stringtype eq {true charpath flattenpath} {exec}
	ifelse } repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll just
	1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub 0.5
	mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch just 4
	and 0 gt {just 8 and 0 gt {exch pop neg fspc sub} {add 0.5 mul neg}
	ifelse} {pop neg fspc add} ifelse rotval rotate Kn currentpoint
	translate /showflag 1 def /Bline 0 def /Tabs 0 array def /fscale
	1.0 def /kY 0 def {dup type /stringtype eq {show}{exec} ifelse}
	repeat grestore } def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate { /hlevel hlevel 1 add def /defColor currentcolor sce 3 array
	astore def gsave sce translate 0 0 moveto neg rotate dup abs scale
	} bind def
/makeparm  {3 string cvs dup length 1 add string /tstr exch def tstr exch
	1 exch putinterval tstr 0 (v) putinterval tstr cvn} bind def
/beginparm { -1 1 {makeparm exch def} for
	dup type /arraytype eq { aload length -1 1 {makeparm exch def}
	for } if begingate } bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb} bind def

/hlevel 0 def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def
  style 1 and 0 gt not {closepath} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if 
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if 
  style dup 256 ge exch 480 lt and { gsave 1 setgray eofill grestore } if
  style 16 and 0 gt { gsave style 224 and -5 bitshift dup 7 lt
	{gar exch get ppaint} { pop eofill } ifelse grestore } if
  style 8 and 0 gt style 512 eq or { newpath } { stroke } ifelse grestore } def

/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef } def
/psinsertion {/PSobj save def /showpage {} def bop rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

/dot {
% trivial
begingate
248 1.00 0 0 6 0.00 360.00 xcarc
1.000 0.000 0.000 scb
(x) {/Times-Roman cf} 2 29 0 1.00 0 0 pinlabel
endgate
} def

%%Page: 1 1
%%PageOrientation: Portrait
/pgsave save def bop
% 416 352 offsets
1.0000 inchscale
2.6000 setlinewidth

1.00 0 224 448 dot
1.00 0 544 448 dot
1.00 0 544 320 dot
1.00 0 224 320 dot
(1) {/Helvetica cf} 2 16 0 1.00 192 448 label
(2) {/Helvetica cf} 2 16 0 1.00 192 304 label
(5) {/Helvetica cf} 2 16 0 1.00 560 448 label
1.00 0 384 224 dot
1 1.00 224 448 544 448 544 320 384 224 224 320 224 448 6 polygon
1 1.00 384 224 224 448 544 320 3 polygon
5 1.00 224 320 544 448 384 224 3 polygon
(3) {/Helvetica cf} 2 16 0 1.00 384 192 label
(4) {/Helvetica cf} 2 16 0 1.00 560 304 label
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF

%%EndDocument
 @endspecial 1064 4609 a(facets)101 b(new)27 b(w)n(alls)100
b Fn(d)p Fm(:)37 b(#)19 b(new)f(w)n(alls)p 824 4642 1721
4 v 874 4712 a Fn(F)927 4724 y Fj(1)1105 4712 y Fm(123)139
b(12,)26 b(13,)h(23)130 b(0)g Fk(g)p Fn(h)2113 4724 y
Fj(0)2172 4712 y Fm(=)23 b(1)874 4812 y Fn(F)927 4824
y Fj(2)1105 4812 y Fm(134)205 b(14,)27 b(34)197 b(1)2023
4795 y Fb(\011)2071 4862 y Fn(h)2119 4874 y Fj(1)2179
4862 y Fm(=)23 b(2)874 4911 y Fn(F)927 4923 y Fj(3)1105
4911 y Fm(145)205 b(15,)27 b(45)197 b(1)874 5011 y Fn(F)927
5023 y Fj(4)1105 5011 y Fm(345)272 b(35)264 b(2)2023
4994 y Fb(\011)2071 5061 y Fn(h)2119 5073 y Fj(2)2179
5061 y Fm(=)23 b(2)874 5110 y Fn(F)927 5122 y Fj(5)1105
5110 y Fm(235)272 b(25)264 b(2)874 5210 y Fn(F)927 5222
y Fj(6)1105 5210 y Fm(125)293 b Fk(;)285 b Fm(3)130 b
Fk(g)p Fn(h)2113 5222 y Fj(3)2172 5210 y Fm(=)23 b(1)-55
5306 y(F)-7 b(or)27 b(shellable)g(\001,)1929 5580 y(3)p
eop
%%Page: 4 4
4 3 bop -180 210 a Fm(Cor)27 b(1:)41 b Fn(h)136 222 y
Fl(i)163 210 y Fm(\(\001\))24 b Fk(\025)f Fm(0)-180 376
y(Cor)k(2:)41 b Fn(h)136 388 y Fl(i)163 376 y Fm(\(\001\))30
b(=)f Fn(h)468 388 y Fl(d)p Ff(\000)p Fl(i)582 376 y
Fm(\(\001\))j(\(pro)n(vided)e(\001)i(is)f(the)g(b)r(oundary)g(of)g(a)g
Fn(d)p Fm(-dimensional)f(p)r(olytop)r(e,)j(or)d(more)g(generally)g(has)
h(a)f(shelling)88 476 y(order)c(whose)h(rev)n(erse)f(is)h(also)g(a)g
(shelling)g(order\).)-25 617 y Fj(1905)-55 669 y Fb(z)p
-18 669 22 10 v 22 w(}|)p 78 669 V 22 w({)-55 751 y Fm(Dehn)14
b Fk(\000)386 617 y Fj(1927)229 669 y Fb(z)p 266 669
148 10 v 148 w(}|)p 488 669 V 148 w({)230 751 y Fm(Sommerville)26
b(equations.)36 b(\(The)28 b(rev)n(erse)e(of)i(a)f(Barg-Mani)e
(shelling)i(is)h(still)g(a)f(shelling,)g(and)h(\\old")e
Fk($)i Fm(\\new"\))1929 5580 y(4)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
